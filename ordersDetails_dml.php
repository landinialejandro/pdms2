<?php

// Data functions (insert, update, delete, form) for table ordersDetails

// This script and data application were generated by AppGini 5.72
// Download AppGini for free from https://bigprof.com/appgini/download/

function ordersDetails_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('ordersDetails');
	if(!$arrPerm[1]){
		return false;
	}

	$data['order'] = makeSafe($_REQUEST['order']);
		if($data['order'] == empty_lookup_value){ $data['order'] = ''; }
	$data['manufactureDate'] = intval($_REQUEST['manufactureDateYear']) . '-' . intval($_REQUEST['manufactureDateMonth']) . '-' . intval($_REQUEST['manufactureDateDay']);
	$data['manufactureDate'] = parseMySQLDate($data['manufactureDate'], '<%%creationDate%%>');
	$data['sellDate'] = intval($_REQUEST['sellDateYear']) . '-' . intval($_REQUEST['sellDateMonth']) . '-' . intval($_REQUEST['sellDateDay']);
	$data['sellDate'] = parseMySQLDate($data['sellDate'], '<%%creationDate%%>');
	$data['expiryDate'] = intval($_REQUEST['expiryDateYear']) . '-' . intval($_REQUEST['expiryDateMonth']) . '-' . intval($_REQUEST['expiryDateDay']);
	$data['expiryDate'] = parseMySQLDate($data['expiryDate'], '');
	$data['daysToExpiry'] = makeSafe($_REQUEST['daysToExpiry']);
		if($data['daysToExpiry'] == empty_lookup_value){ $data['daysToExpiry'] = ''; }
	$data['codebar'] = makeSafe($_REQUEST['productCode']);
		if($data['codebar'] == empty_lookup_value){ $data['codebar'] = ''; }
	$data['UM'] = makeSafe($_REQUEST['productCode']);
		if($data['UM'] == empty_lookup_value){ $data['UM'] = ''; }
	$data['productCode'] = makeSafe($_REQUEST['productCode']);
		if($data['productCode'] == empty_lookup_value){ $data['productCode'] = ''; }
	$data['batch'] = makeSafe($_REQUEST['productCode']);
		if($data['batch'] == empty_lookup_value){ $data['batch'] = ''; }
	$data['packages'] = makeSafe($_REQUEST['packages']);
		if($data['packages'] == empty_lookup_value){ $data['packages'] = ''; }
	$data['noSell'] = makeSafe($_REQUEST['noSell']);
		if($data['noSell'] == empty_lookup_value){ $data['noSell'] = ''; }
	$data['Quantity'] = makeSafe($_REQUEST['Quantity']);
		if($data['Quantity'] == empty_lookup_value){ $data['Quantity'] = ''; }
	$data['QuantityReal'] = makeSafe($_REQUEST['QuantityReal']);
		if($data['QuantityReal'] == empty_lookup_value){ $data['QuantityReal'] = ''; }
	$data['UnitPrice'] = makeSafe($_REQUEST['UnitPrice']);
		if($data['UnitPrice'] == empty_lookup_value){ $data['UnitPrice'] = ''; }
	$data['Subtotal'] = makeSafe($_REQUEST['Subtotal']);
		if($data['Subtotal'] == empty_lookup_value){ $data['Subtotal'] = ''; }
	$data['taxes'] = makeSafe($_REQUEST['taxes']);
		if($data['taxes'] == empty_lookup_value){ $data['taxes'] = ''; }
	$data['Discount'] = makeSafe($_REQUEST['Discount']);
		if($data['Discount'] == empty_lookup_value){ $data['Discount'] = ''; }
	$data['LineTotal'] = makeSafe($_REQUEST['LineTotal']);
		if($data['LineTotal'] == empty_lookup_value){ $data['LineTotal'] = ''; }
	$data['section'] = makeSafe($_REQUEST['section']);
		if($data['section'] == empty_lookup_value){ $data['section'] = ''; }
	$data['transaction_type'] = makeSafe($_REQUEST['order']);
		if($data['transaction_type'] == empty_lookup_value){ $data['transaction_type'] = ''; }
	$data['skBatches'] = makeSafe($_REQUEST['skBatches']);
		if($data['skBatches'] == empty_lookup_value){ $data['skBatches'] = ''; }
	$data['averagePrice'] = makeSafe($_REQUEST['averagePrice']);
		if($data['averagePrice'] == empty_lookup_value){ $data['averagePrice'] = ''; }
	$data['averageWeight'] = makeSafe($_REQUEST['averageWeight']);
		if($data['averageWeight'] == empty_lookup_value){ $data['averageWeight'] = ''; }
	$data['commission'] = makeSafe($_REQUEST['commission']);
		if($data['commission'] == empty_lookup_value){ $data['commission'] = ''; }
	$data['return'] = makeSafe($_REQUEST['return']);
		if($data['return'] == empty_lookup_value){ $data['return'] = ''; }
	$data['supplierCode'] = makeSafe($_REQUEST['supplierCode']);
		if($data['supplierCode'] == empty_lookup_value){ $data['supplierCode'] = ''; }
	if($data['Quantity'] == '') $data['Quantity'] = "1";
	if($data['section'] == '') $data['section'] = "Magazzino Metaponto";
	if($data['transaction_type'] == '') $data['transaction_type'] = "Outgoing";
	if($data['commission'] == '') $data['commission'] = "15.00";

	// hook: ordersDetails_before_insert
	if(function_exists('ordersDetails_before_insert')){
		$args=array();
		if(!ordersDetails_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `ordersDetails` set       `manufactureDate`=' . (($data['manufactureDate'] !== '' && $data['manufactureDate'] !== NULL) ? "'{$data['manufactureDate']}'" : 'NULL') . ', `sellDate`=' . (($data['sellDate'] !== '' && $data['sellDate'] !== NULL) ? "'{$data['sellDate']}'" : 'NULL') . ', `productCode`=' . (($data['productCode'] !== '' && $data['productCode'] !== NULL) ? "'{$data['productCode']}'" : 'NULL') . ', `packages`=' . (($data['packages'] !== '' && $data['packages'] !== NULL) ? "'{$data['packages']}'" : 'NULL') . ', `noSell`=' . (($data['noSell'] !== '' && $data['noSell'] !== NULL) ? "'{$data['noSell']}'" : 'NULL') . ', `Quantity`=' . (($data['Quantity'] !== '' && $data['Quantity'] !== NULL) ? "'{$data['Quantity']}'" : 'NULL') . ', `QuantityReal`=' . (($data['QuantityReal'] !== '' && $data['QuantityReal'] !== NULL) ? "'{$data['QuantityReal']}'" : 'NULL') . ', `UnitPrice`=' . (($data['UnitPrice'] !== '' && $data['UnitPrice'] !== NULL) ? "'{$data['UnitPrice']}'" : 'NULL') . ', `Subtotal`=' . (($data['Subtotal'] !== '' && $data['Subtotal'] !== NULL) ? "'{$data['Subtotal']}'" : 'NULL') . ', `taxes`=' . (($data['taxes'] !== '' && $data['taxes'] !== NULL) ? "'{$data['taxes']}'" : 'NULL') . ', `Discount`=' . (($data['Discount'] !== '' && $data['Discount'] !== NULL) ? "'{$data['Discount']}'" : 'NULL') . ', `LineTotal`=' . (($data['LineTotal'] !== '' && $data['LineTotal'] !== NULL) ? "'{$data['LineTotal']}'" : 'NULL') . ', `averagePrice`=' . (($data['averagePrice'] !== '' && $data['averagePrice'] !== NULL) ? "'{$data['averagePrice']}'" : 'NULL') . ', `averageWeight`=' . (($data['averageWeight'] !== '' && $data['averageWeight'] !== NULL) ? "'{$data['averageWeight']}'" : 'NULL') . ', `commission`=' . (($data['commission'] !== '' && $data['commission'] !== NULL) ? "'{$data['commission']}'" : 'NULL') . ', `return`=' . (($data['return'] !== '' && $data['return'] !== NULL) ? "'{$data['return']}'" : 'NULL') . ', `supplierCode`=' . (($data['supplierCode'] !== '' && $data['supplierCode'] !== NULL) ? "'{$data['supplierCode']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"ordersDetails_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// automatic order
	if($_REQUEST['filterer_order']){
		sql("update `ordersDetails` set `order`='" . makeSafe($_REQUEST['filterer_order']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// automatic codebar
	if($_REQUEST['filterer_codebar']){
		sql("update `ordersDetails` set `codebar`='" . makeSafe($_REQUEST['filterer_codebar']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// automatic UM
	if($_REQUEST['filterer_UM']){
		sql("update `ordersDetails` set `UM`='" . makeSafe($_REQUEST['filterer_UM']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// automatic batch
	if($_REQUEST['filterer_batch']){
		sql("update `ordersDetails` set `batch`='" . makeSafe($_REQUEST['filterer_batch']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// automatic section
	if($_REQUEST['filterer_section']){
		sql("update `ordersDetails` set `section`='" . makeSafe($_REQUEST['filterer_section']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// automatic transaction_type
	if($_REQUEST['filterer_transaction_type']){
		sql("update `ordersDetails` set `transaction_type`='" . makeSafe($_REQUEST['filterer_transaction_type']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// hook: ordersDetails_after_insert
	if(function_exists('ordersDetails_after_insert')){
		$res = sql("select * from `ordersDetails` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!ordersDetails_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('ordersDetails', $recID, getLoggedMemberID());

	return $recID;
}

function ordersDetails_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('ordersDetails');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='ordersDetails' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='ordersDetails' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: ordersDetails_before_delete
	if(function_exists('ordersDetails_before_delete')){
		$args=array();
		if(!ordersDetails_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `ordersDetails` where `id`='$selected_id'", $eo);

	// hook: ordersDetails_after_delete
	if(function_exists('ordersDetails_after_delete')){
		$args=array();
		ordersDetails_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='ordersDetails' and pkValue='$selected_id'", $eo);
}

function ordersDetails_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('ordersDetails');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='ordersDetails' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='ordersDetails' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['order'] = makeSafe($_REQUEST['order']);
		if($data['order'] == empty_lookup_value){ $data['order'] = ''; }
	$data['manufactureDate'] = intval($_REQUEST['manufactureDateYear']) . '-' . intval($_REQUEST['manufactureDateMonth']) . '-' . intval($_REQUEST['manufactureDateDay']);
	$data['manufactureDate'] = parseMySQLDate($data['manufactureDate'], '<%%creationDate%%>');
	$data['sellDate'] = intval($_REQUEST['sellDateYear']) . '-' . intval($_REQUEST['sellDateMonth']) . '-' . intval($_REQUEST['sellDateDay']);
	$data['sellDate'] = parseMySQLDate($data['sellDate'], '<%%creationDate%%>');
	$data['expiryDate'] = intval($_REQUEST['expiryDateYear']) . '-' . intval($_REQUEST['expiryDateMonth']) . '-' . intval($_REQUEST['expiryDateDay']);
	$data['expiryDate'] = parseMySQLDate($data['expiryDate'], '');
	$data['daysToExpiry'] = makeSafe($_REQUEST['daysToExpiry']);
		if($data['daysToExpiry'] == empty_lookup_value){ $data['daysToExpiry'] = ''; }
	$data['codebar'] = makeSafe($_REQUEST['productCode']);
		if($data['codebar'] == empty_lookup_value){ $data['codebar'] = ''; }
	$data['UM'] = makeSafe($_REQUEST['productCode']);
		if($data['UM'] == empty_lookup_value){ $data['UM'] = ''; }
	$data['productCode'] = makeSafe($_REQUEST['productCode']);
		if($data['productCode'] == empty_lookup_value){ $data['productCode'] = ''; }
	$data['batch'] = makeSafe($_REQUEST['productCode']);
		if($data['batch'] == empty_lookup_value){ $data['batch'] = ''; }
	$data['packages'] = makeSafe($_REQUEST['packages']);
		if($data['packages'] == empty_lookup_value){ $data['packages'] = ''; }
	$data['noSell'] = makeSafe($_REQUEST['noSell']);
		if($data['noSell'] == empty_lookup_value){ $data['noSell'] = ''; }
	$data['Quantity'] = makeSafe($_REQUEST['Quantity']);
		if($data['Quantity'] == empty_lookup_value){ $data['Quantity'] = ''; }
	$data['QuantityReal'] = makeSafe($_REQUEST['QuantityReal']);
		if($data['QuantityReal'] == empty_lookup_value){ $data['QuantityReal'] = ''; }
	$data['UnitPrice'] = makeSafe($_REQUEST['UnitPrice']);
		if($data['UnitPrice'] == empty_lookup_value){ $data['UnitPrice'] = ''; }
	$data['Subtotal'] = makeSafe($_REQUEST['Subtotal']);
		if($data['Subtotal'] == empty_lookup_value){ $data['Subtotal'] = ''; }
	$data['taxes'] = makeSafe($_REQUEST['taxes']);
		if($data['taxes'] == empty_lookup_value){ $data['taxes'] = ''; }
	$data['Discount'] = makeSafe($_REQUEST['Discount']);
		if($data['Discount'] == empty_lookup_value){ $data['Discount'] = ''; }
	$data['LineTotal'] = makeSafe($_REQUEST['LineTotal']);
		if($data['LineTotal'] == empty_lookup_value){ $data['LineTotal'] = ''; }
	$data['section'] = makeSafe($_REQUEST['section']);
		if($data['section'] == empty_lookup_value){ $data['section'] = ''; }
	$data['transaction_type'] = makeSafe($_REQUEST['order']);
		if($data['transaction_type'] == empty_lookup_value){ $data['transaction_type'] = ''; }
	$data['skBatches'] = makeSafe($_REQUEST['skBatches']);
		if($data['skBatches'] == empty_lookup_value){ $data['skBatches'] = ''; }
	$data['averagePrice'] = makeSafe($_REQUEST['averagePrice']);
		if($data['averagePrice'] == empty_lookup_value){ $data['averagePrice'] = ''; }
	$data['averageWeight'] = makeSafe($_REQUEST['averageWeight']);
		if($data['averageWeight'] == empty_lookup_value){ $data['averageWeight'] = ''; }
	$data['commission'] = makeSafe($_REQUEST['commission']);
		if($data['commission'] == empty_lookup_value){ $data['commission'] = ''; }
	$data['return'] = makeSafe($_REQUEST['return']);
		if($data['return'] == empty_lookup_value){ $data['return'] = ''; }
	$data['supplierCode'] = makeSafe($_REQUEST['supplierCode']);
		if($data['supplierCode'] == empty_lookup_value){ $data['supplierCode'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: ordersDetails_before_update
	if(function_exists('ordersDetails_before_update')){
		$args=array();
		if(!ordersDetails_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `ordersDetails` set       `manufactureDate`=' . (($data['manufactureDate'] !== '' && $data['manufactureDate'] !== NULL) ? "'{$data['manufactureDate']}'" : 'NULL') . ', `sellDate`=' . (($data['sellDate'] !== '' && $data['sellDate'] !== NULL) ? "'{$data['sellDate']}'" : 'NULL') . ', `productCode`=' . (($data['productCode'] !== '' && $data['productCode'] !== NULL) ? "'{$data['productCode']}'" : 'NULL') . ', `packages`=' . (($data['packages'] !== '' && $data['packages'] !== NULL) ? "'{$data['packages']}'" : 'NULL') . ', `noSell`=' . (($data['noSell'] !== '' && $data['noSell'] !== NULL) ? "'{$data['noSell']}'" : 'NULL') . ', `Quantity`=' . (($data['Quantity'] !== '' && $data['Quantity'] !== NULL) ? "'{$data['Quantity']}'" : 'NULL') . ', `QuantityReal`=' . (($data['QuantityReal'] !== '' && $data['QuantityReal'] !== NULL) ? "'{$data['QuantityReal']}'" : 'NULL') . ', `UnitPrice`=' . (($data['UnitPrice'] !== '' && $data['UnitPrice'] !== NULL) ? "'{$data['UnitPrice']}'" : 'NULL') . ', `Subtotal`=' . (($data['Subtotal'] !== '' && $data['Subtotal'] !== NULL) ? "'{$data['Subtotal']}'" : 'NULL') . ', `taxes`=' . (($data['taxes'] !== '' && $data['taxes'] !== NULL) ? "'{$data['taxes']}'" : 'NULL') . ', `Discount`=' . (($data['Discount'] !== '' && $data['Discount'] !== NULL) ? "'{$data['Discount']}'" : 'NULL') . ', `LineTotal`=' . (($data['LineTotal'] !== '' && $data['LineTotal'] !== NULL) ? "'{$data['LineTotal']}'" : 'NULL') . ', `averagePrice`=' . (($data['averagePrice'] !== '' && $data['averagePrice'] !== NULL) ? "'{$data['averagePrice']}'" : 'NULL') . ', `averageWeight`=' . (($data['averageWeight'] !== '' && $data['averageWeight'] !== NULL) ? "'{$data['averageWeight']}'" : 'NULL') . ', `commission`=' . (($data['commission'] !== '' && $data['commission'] !== NULL) ? "'{$data['commission']}'" : 'NULL') . ', `return`=' . (($data['return'] !== '' && $data['return'] !== NULL) ? "'{$data['return']}'" : 'NULL') . ', `supplierCode`=' . (($data['supplierCode'] !== '' && $data['supplierCode'] !== NULL) ? "'{$data['supplierCode']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="ordersDetails_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: ordersDetails_after_update
	if(function_exists('ordersDetails_after_update')){
		$res = sql("SELECT * FROM `ordersDetails` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!ordersDetails_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='ordersDetails' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function ordersDetails_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('ordersDetails');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_order = thisOr(undo_magic_quotes($_REQUEST['filterer_order']), '');
	$filterer_productCode = thisOr(undo_magic_quotes($_REQUEST['filterer_productCode']), '');
	$filterer_section = thisOr(undo_magic_quotes($_REQUEST['filterer_section']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: order
	$combo_order = new DataCombo;
	// combobox: manufactureDate
	$combo_manufactureDate = new DateCombo;
	$combo_manufactureDate->DateFormat = "dmy";
	$combo_manufactureDate->MinYear = 1900;
	$combo_manufactureDate->MaxYear = 2100;
	$combo_manufactureDate->DefaultDate = parseMySQLDate('<%%creationDate%%>', '<%%creationDate%%>');
	$combo_manufactureDate->MonthNames = $Translation['month names'];
	$combo_manufactureDate->NamePrefix = 'manufactureDate';
	// combobox: sellDate
	$combo_sellDate = new DateCombo;
	$combo_sellDate->DateFormat = "dmy";
	$combo_sellDate->MinYear = 1900;
	$combo_sellDate->MaxYear = 2100;
	$combo_sellDate->DefaultDate = parseMySQLDate('<%%creationDate%%>', '<%%creationDate%%>');
	$combo_sellDate->MonthNames = $Translation['month names'];
	$combo_sellDate->NamePrefix = 'sellDate';
	// combobox: expiryDate
	$combo_expiryDate = new DateCombo;
	$combo_expiryDate->DateFormat = "dmy";
	$combo_expiryDate->MinYear = 1900;
	$combo_expiryDate->MaxYear = 2100;
	$combo_expiryDate->DefaultDate = parseMySQLDate('', '');
	$combo_expiryDate->MonthNames = $Translation['month names'];
	$combo_expiryDate->NamePrefix = 'expiryDate';
	// combobox: productCode
	$combo_productCode = new DataCombo;
	// combobox: section
	$combo_section = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='ordersDetails' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='ordersDetails' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `ordersDetails` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'ordersDetails_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_order->SelectedData = $row['order'];
		$combo_manufactureDate->DefaultDate = $row['manufactureDate'];
		$combo_sellDate->DefaultDate = $row['sellDate'];
		$combo_expiryDate->DefaultDate = $row['expiryDate'];
		$combo_productCode->SelectedData = $row['productCode'];
		$combo_section->SelectedData = $row['section'];
	}else{
		$combo_order->SelectedData = $filterer_order;
		$combo_productCode->SelectedData = $filterer_productCode;
		$combo_section->SelectedData = $filterer_section;
	}
	$combo_order->HTML = '<span id="order-container' . $rnd1 . '"></span><input type="hidden" name="order" id="order' . $rnd1 . '" value="' . html_attr($combo_order->SelectedData) . '">';
	$combo_order->MatchText = '<span id="order-container-readonly' . $rnd1 . '"></span><input type="hidden" name="order" id="order' . $rnd1 . '" value="' . html_attr($combo_order->SelectedData) . '">';
	$combo_productCode->HTML = '<span id="productCode-container' . $rnd1 . '"></span><input type="hidden" name="productCode" id="productCode' . $rnd1 . '" value="' . html_attr($combo_productCode->SelectedData) . '">';
	$combo_productCode->MatchText = '<span id="productCode-container-readonly' . $rnd1 . '"></span><input type="hidden" name="productCode" id="productCode' . $rnd1 . '" value="' . html_attr($combo_productCode->SelectedData) . '">';
	$combo_section->HTML = '<span id="section-container' . $rnd1 . '"></span><input type="hidden" name="section" id="section' . $rnd1 . '" value="' . html_attr($combo_section->SelectedData) . '">';
	$combo_section->MatchText = '<span id="section-container-readonly' . $rnd1 . '"></span><input type="hidden" name="section" id="section' . $rnd1 . '" value="' . html_attr($combo_section->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_order__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['order'] : $filterer_order); ?>"};
		AppGini.current_productCode__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['productCode'] : $filterer_productCode); ?>"};
		AppGini.current_section__RAND__ = { text: "<?php echo ($selected_id ? '' : 'Magazzino Metaponto'); ?>", value: "<?php echo addslashes($selected_id ? $urow['section'] : $filterer_section); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(order_reload__RAND__) == 'function') order_reload__RAND__();
				if(typeof(productCode_reload__RAND__) == 'function') productCode_reload__RAND__();
				if(typeof(section_reload__RAND__) == 'function') section_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function order_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#order-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_order__RAND__.value, t: 'ordersDetails', f: 'order' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="order"]').val(resp.results[0].id);
							$j('[id=order-container-readonly__RAND__]').html('<span id="order-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=orders_view_parent]').hide(); }else{ $j('.btn[id=orders_view_parent]').show(); }


							if(typeof(order_update_autofills__RAND__) == 'function') order_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'ordersDetails', f: 'order' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_order__RAND__.value = e.added.id;
				AppGini.current_order__RAND__.text = e.added.text;
				$j('[name="order"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=orders_view_parent]').hide(); }else{ $j('.btn[id=orders_view_parent]').show(); }


				if(typeof(order_update_autofills__RAND__) == 'function') order_update_autofills__RAND__();
			});

			if(!$j("#order-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_order__RAND__.value, t: 'ordersDetails', f: 'order' },
					success: function(resp){
						$j('[name="order"]').val(resp.results[0].id);
						$j('[id=order-container-readonly__RAND__]').html('<span id="order-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=orders_view_parent]').hide(); }else{ $j('.btn[id=orders_view_parent]').show(); }

						if(typeof(order_update_autofills__RAND__) == 'function') order_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_order__RAND__.value, t: 'ordersDetails', f: 'order' },
				success: function(resp){
					$j('[id=order-container__RAND__], [id=order-container-readonly__RAND__]').html('<span id="order-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=orders_view_parent]').hide(); }else{ $j('.btn[id=orders_view_parent]').show(); }

					if(typeof(order_update_autofills__RAND__) == 'function') order_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function productCode_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#productCode-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_productCode__RAND__.value, t: 'ordersDetails', f: 'productCode' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="productCode"]').val(resp.results[0].id);
							$j('[id=productCode-container-readonly__RAND__]').html('<span id="productCode-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=products_view_parent]').hide(); }else{ $j('.btn[id=products_view_parent]').show(); }


							if(typeof(productCode_update_autofills__RAND__) == 'function') productCode_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'ordersDetails', f: 'productCode' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_productCode__RAND__.value = e.added.id;
				AppGini.current_productCode__RAND__.text = e.added.text;
				$j('[name="productCode"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=products_view_parent]').hide(); }else{ $j('.btn[id=products_view_parent]').show(); }


				if(typeof(productCode_update_autofills__RAND__) == 'function') productCode_update_autofills__RAND__();
			});

			if(!$j("#productCode-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_productCode__RAND__.value, t: 'ordersDetails', f: 'productCode' },
					success: function(resp){
						$j('[name="productCode"]').val(resp.results[0].id);
						$j('[id=productCode-container-readonly__RAND__]').html('<span id="productCode-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=products_view_parent]').hide(); }else{ $j('.btn[id=products_view_parent]').show(); }

						if(typeof(productCode_update_autofills__RAND__) == 'function') productCode_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_productCode__RAND__.value, t: 'ordersDetails', f: 'productCode' },
				success: function(resp){
					$j('[id=productCode-container__RAND__], [id=productCode-container-readonly__RAND__]').html('<span id="productCode-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=products_view_parent]').hide(); }else{ $j('.btn[id=products_view_parent]').show(); }

					if(typeof(productCode_update_autofills__RAND__) == 'function') productCode_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function section_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#section-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						<?php if(!$selected_id && !$filterer_section){ ?>
							data: { text: 'Magazzino Metaponto', t: 'ordersDetails', f: 'section' },
						<?php }else{ ?>
							data: { id: AppGini.current_section__RAND__.value, t: 'ordersDetails', f: 'section' },
						<?php } ?>

						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="section"]').val(resp.results[0].id);
							$j('[id=section-container-readonly__RAND__]').html('<span id="section-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


							if(typeof(section_update_autofills__RAND__) == 'function') section_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'ordersDetails', f: 'section' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_section__RAND__.value = e.added.id;
				AppGini.current_section__RAND__.text = e.added.text;
				$j('[name="section"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


				if(typeof(section_update_autofills__RAND__) == 'function') section_update_autofills__RAND__();
			});

			if(!$j("#section-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_section__RAND__.value, t: 'ordersDetails', f: 'section' },
					success: function(resp){
						$j('[name="section"]').val(resp.results[0].id);
						$j('[id=section-container-readonly__RAND__]').html('<span id="section-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

						if(typeof(section_update_autofills__RAND__) == 'function') section_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_section__RAND__.value, t: 'ordersDetails', f: 'section' },
				success: function(resp){
					$j('[id=section-container__RAND__], [id=section-container-readonly__RAND__]').html('<span id="section-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

					if(typeof(section_update_autofills__RAND__) == 'function') section_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/ordersDetails_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/ordersDetails_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Ordini In dettaglio', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return ordersDetails_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return ordersDetails_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return ordersDetails_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#manufactureDate').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#manufactureDateDay, #manufactureDateMonth, #manufactureDateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#sellDate').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#sellDateDay, #sellDateMonth, #sellDateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#productCode').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#productCode_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#packages').replaceWith('<div class=\"form-control-static\" id=\"packages\">' + (jQuery('#packages').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#noSell').replaceWith('<div class=\"form-control-static\" id=\"noSell\">' + (jQuery('#noSell').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Quantity').replaceWith('<div class=\"form-control-static\" id=\"Quantity\">' + (jQuery('#Quantity').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#QuantityReal').replaceWith('<div class=\"form-control-static\" id=\"QuantityReal\">' + (jQuery('#QuantityReal').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#UnitPrice').replaceWith('<div class=\"form-control-static\" id=\"UnitPrice\">' + (jQuery('#UnitPrice').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Subtotal').replaceWith('<div class=\"form-control-static\" id=\"Subtotal\">' + (jQuery('#Subtotal').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#taxes').replaceWith('<div class=\"form-control-static\" id=\"taxes\">' + (jQuery('#taxes').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Discount').replaceWith('<div class=\"form-control-static\" id=\"Discount\">' + (jQuery('#Discount').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#LineTotal').replaceWith('<div class=\"form-control-static\" id=\"LineTotal\">' + (jQuery('#LineTotal').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#averagePrice').replaceWith('<div class=\"form-control-static\" id=\"averagePrice\">' + (jQuery('#averagePrice').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#averageWeight').replaceWith('<div class=\"form-control-static\" id=\"averageWeight\">' + (jQuery('#averageWeight').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#commission').replaceWith('<div class=\"form-control-static\" id=\"commission\">' + (jQuery('#commission').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#return').prop('disabled', true);\n";
		$jsReadOnly .= "\tjQuery('#supplierCode').replaceWith('<div class=\"form-control-static\" id=\"supplierCode\">' + (jQuery('#supplierCode').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(order)%%>', $combo_order->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(order)%%>', $combo_order->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(order)%%>', urlencode($combo_order->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(manufactureDate)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_manufactureDate->GetHTML(true) . '</div>' : $combo_manufactureDate->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(manufactureDate)%%>', $combo_manufactureDate->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(sellDate)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_sellDate->GetHTML(true) . '</div>' : $combo_sellDate->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(sellDate)%%>', $combo_sellDate->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(expiryDate)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_expiryDate->GetHTML(true) . '</div>' : $combo_expiryDate->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(expiryDate)%%>', $combo_expiryDate->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(productCode)%%>', $combo_productCode->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(productCode)%%>', $combo_productCode->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(productCode)%%>', urlencode($combo_productCode->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(section)%%>', $combo_section->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(section)%%>', $combo_section->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(section)%%>', urlencode($combo_section->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'order' => array('orders', 'Id Azienda'), 'productCode' => array('products', 'Codice prodotto'), 'section' => array('kinds', 'Reparto'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(order)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(manufactureDate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(sellDate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(expiryDate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(daysToExpiry)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(productCode)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(packages)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(noSell)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Quantity)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(QuantityReal)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(UnitPrice)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Subtotal)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(taxes)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Discount)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(LineTotal)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(section)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(skBatches)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(averagePrice)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(averageWeight)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(commission)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(return)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(supplierCode)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(order)%%>', safe_html($urow['order']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(order)%%>', html_attr($row['order']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(order)%%>', urlencode($urow['order']), $templateCode);
		$templateCode = str_replace('<%%VALUE(manufactureDate)%%>', @date('d/m/Y', @strtotime(html_attr($row['manufactureDate']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(manufactureDate)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['manufactureDate'])))), $templateCode);
		$templateCode = str_replace('<%%VALUE(sellDate)%%>', @date('d/m/Y', @strtotime(html_attr($row['sellDate']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sellDate)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['sellDate'])))), $templateCode);
		$templateCode = str_replace('<%%VALUE(expiryDate)%%>', @date('d/m/Y', @strtotime(html_attr($row['expiryDate']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(expiryDate)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['expiryDate'])))), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(daysToExpiry)%%>', safe_html($urow['daysToExpiry']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(daysToExpiry)%%>', html_attr($row['daysToExpiry']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(daysToExpiry)%%>', urlencode($urow['daysToExpiry']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(productCode)%%>', safe_html($urow['productCode']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(productCode)%%>', html_attr($row['productCode']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(productCode)%%>', urlencode($urow['productCode']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(packages)%%>', safe_html($urow['packages']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(packages)%%>', html_attr($row['packages']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(packages)%%>', urlencode($urow['packages']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(noSell)%%>', safe_html($urow['noSell']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(noSell)%%>', html_attr($row['noSell']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(noSell)%%>', urlencode($urow['noSell']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Quantity)%%>', safe_html($urow['Quantity']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Quantity)%%>', html_attr($row['Quantity']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Quantity)%%>', urlencode($urow['Quantity']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(QuantityReal)%%>', safe_html($urow['QuantityReal']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(QuantityReal)%%>', html_attr($row['QuantityReal']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(QuantityReal)%%>', urlencode($urow['QuantityReal']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(UnitPrice)%%>', safe_html($urow['UnitPrice']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(UnitPrice)%%>', html_attr($row['UnitPrice']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UnitPrice)%%>', urlencode($urow['UnitPrice']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Subtotal)%%>', safe_html($urow['Subtotal']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Subtotal)%%>', html_attr($row['Subtotal']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Subtotal)%%>', urlencode($urow['Subtotal']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(taxes)%%>', safe_html($urow['taxes']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(taxes)%%>', html_attr($row['taxes']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(taxes)%%>', urlencode($urow['taxes']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Discount)%%>', safe_html($urow['Discount']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Discount)%%>', html_attr($row['Discount']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Discount)%%>', urlencode($urow['Discount']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(LineTotal)%%>', safe_html($urow['LineTotal']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(LineTotal)%%>', html_attr($row['LineTotal']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(LineTotal)%%>', urlencode($urow['LineTotal']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(section)%%>', safe_html($urow['section']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(section)%%>', html_attr($row['section']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(section)%%>', urlencode($urow['section']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(skBatches)%%>', safe_html($urow['skBatches']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(skBatches)%%>', html_attr($row['skBatches']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(skBatches)%%>', urlencode($urow['skBatches']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(averagePrice)%%>', safe_html($urow['averagePrice']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(averagePrice)%%>', html_attr($row['averagePrice']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(averagePrice)%%>', urlencode($urow['averagePrice']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(averageWeight)%%>', safe_html($urow['averageWeight']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(averageWeight)%%>', html_attr($row['averageWeight']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(averageWeight)%%>', urlencode($urow['averageWeight']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(commission)%%>', safe_html($urow['commission']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(commission)%%>', html_attr($row['commission']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(commission)%%>', urlencode($urow['commission']), $templateCode);
		$templateCode = str_replace('<%%CHECKED(return)%%>', ($row['return'] ? "checked" : ""), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(supplierCode)%%>', safe_html($urow['supplierCode']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(supplierCode)%%>', html_attr($row['supplierCode']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(supplierCode)%%>', urlencode($urow['supplierCode']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(order)%%>', ( $_REQUEST['FilterField'][1]=='2' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_order->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(order)%%>', urlencode( $_REQUEST['FilterField'][1]=='2' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_order->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%VALUE(manufactureDate)%%>', '<%%creationDate%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(manufactureDate)%%>', urlencode('<%%creationDate%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(sellDate)%%>', '<%%creationDate%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sellDate)%%>', urlencode('<%%creationDate%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(expiryDate)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(expiryDate)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(daysToExpiry)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(daysToExpiry)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(productCode)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(productCode)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(packages)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(packages)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(noSell)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(noSell)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Quantity)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Quantity)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(QuantityReal)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(QuantityReal)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(UnitPrice)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(UnitPrice)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Subtotal)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Subtotal)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(taxes)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(taxes)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Discount)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Discount)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(LineTotal)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(LineTotal)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(section)%%>', ( $_REQUEST['FilterField'][1]=='20' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_section->SelectedData : 'Magazzino Metaponto'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(section)%%>', urlencode( $_REQUEST['FilterField'][1]=='20' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_section->SelectedData : 'Magazzino Metaponto'), $templateCode);
		$templateCode = str_replace('<%%VALUE(skBatches)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(skBatches)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(averagePrice)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(averagePrice)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(averageWeight)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(averageWeight)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(commission)%%>', '15.00', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(commission)%%>', urlencode('15.00'), $templateCode);
		$templateCode = str_replace('<%%CHECKED(return)%%>', 'checked', $templateCode);
		$templateCode = str_replace('<%%VALUE(supplierCode)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(supplierCode)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\torder_update_autofills$rnd1 = function(){\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint){
		$templateCode .= "\t\t\turl: 'ordersDetails_autofill.php?rnd1=$rnd1&mfk=order&id=' + encodeURIComponent('".addslashes($row['order'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET'\n";
	}else{
		$templateCode .= "\t\t\turl: 'ordersDetails_autofill.php?rnd1=$rnd1&mfk=order&id=' + encodeURIComponent(AppGini.current_order{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET', beforeSend: function(){ /* */ \$j('#order$rnd1').prop('disabled', true); \$j('#orderLoading').html('<img src=loading.gif align=top>'); }, complete: function(){".(($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#order$rnd1').prop('disabled', false); " : "\$j('#order$rnd1').prop('disabled', true); ")."\$j('#orderLoading').html('');}\n";
	}
	$templateCode.="\t\t});\n";
	$templateCode.="\t};\n";
	if(!$dvprint) $templateCode.="\tif(\$j('#order_caption').length) \$j('#order_caption').click(function(){ /* */ order_update_autofills$rnd1(); });\n";

	$templateCode .= "\tproductCode_update_autofills$rnd1 = function(){\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint){
		$templateCode .= "\t\t\turl: 'ordersDetails_autofill.php?rnd1=$rnd1&mfk=productCode&id=' + encodeURIComponent('".addslashes($row['productCode'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET'\n";
	}else{
		$templateCode .= "\t\t\turl: 'ordersDetails_autofill.php?rnd1=$rnd1&mfk=productCode&id=' + encodeURIComponent(AppGini.current_productCode{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET', beforeSend: function(){ /* */ \$j('#productCode$rnd1').prop('disabled', true); \$j('#productCodeLoading').html('<img src=loading.gif align=top>'); }, complete: function(){".(($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#productCode$rnd1').prop('disabled', false); " : "\$j('#productCode$rnd1').prop('disabled', true); ")."\$j('#productCodeLoading').html('');}\n";
	}
	$templateCode.="\t\t});\n";
	$templateCode.="\t};\n";
	if(!$dvprint) $templateCode.="\tif(\$j('#productCode_caption').length) \$j('#productCode_caption').click(function(){ /* */ productCode_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('ordersDetails');
	if($selected_id){
		$jdata = get_joined_record('ordersDetails', $selected_id);
		if($jdata === false) $jdata = get_defaults('ordersDetails');
		$rdata = $row;
	}
	$templateCode .= loadView('ordersDetails-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: ordersDetails_dv
	if(function_exists('ordersDetails_dv')){
		$args=array();
		ordersDetails_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>