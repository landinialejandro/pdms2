<?php

// Data functions (insert, update, delete, form) for table addresses

// This script and data application were generated by AppGini 5.74
// Download AppGini for free from https://bigprof.com/appgini/download/

function addresses_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('addresses');
	if(!$arrPerm[1]){
		return false;
	}

	$data['kind'] = makeSafe($_REQUEST['kind']);
		if($data['kind'] == empty_lookup_value){ $data['kind'] = ''; }
	$data['address'] = makeSafe($_REQUEST['address']);
		if($data['address'] == empty_lookup_value){ $data['address'] = ''; }
	$data['houseNumber'] = makeSafe($_REQUEST['houseNumber']);
		if($data['houseNumber'] == empty_lookup_value){ $data['houseNumber'] = ''; }
	$data['country'] = makeSafe($_REQUEST['country']);
		if($data['country'] == empty_lookup_value){ $data['country'] = ''; }
	$data['country_name'] = makeSafe($_REQUEST['country']);
		if($data['country_name'] == empty_lookup_value){ $data['country_name'] = ''; }
	$data['town'] = makeSafe($_REQUEST['town']);
		if($data['town'] == empty_lookup_value){ $data['town'] = ''; }
	$data['postalCode'] = makeSafe($_REQUEST['town']);
		if($data['postalCode'] == empty_lookup_value){ $data['postalCode'] = ''; }
	$data['district'] = makeSafe($_REQUEST['town']);
		if($data['district'] == empty_lookup_value){ $data['district'] = ''; }
	$data['contact'] = makeSafe($_REQUEST['contact']);
		if($data['contact'] == empty_lookup_value){ $data['contact'] = ''; }
	$data['company'] = makeSafe($_REQUEST['company']);
		if($data['company'] == empty_lookup_value){ $data['company'] = ''; }
	$data['map'] = makeSafe($_REQUEST['map']);
		if($data['map'] == empty_lookup_value){ $data['map'] = ''; }
	$data['default'] = makeSafe($_REQUEST['default']);
		if($data['default'] == empty_lookup_value){ $data['default'] = ''; }
	$data['ship'] = makeSafe($_REQUEST['ship']);
		if($data['ship'] == empty_lookup_value){ $data['ship'] = ''; }
	if($data['address']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Address': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['houseNumber']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'HouseNumber': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['country']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Country Code': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['town']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Town': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	// hook: addresses_before_insert
	if(function_exists('addresses_before_insert')){
		$args=array();
		if(!addresses_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `addresses` set       `kind`=' . (($data['kind'] !== '' && $data['kind'] !== NULL) ? "'{$data['kind']}'" : 'NULL') . ', `address`=' . (($data['address'] !== '' && $data['address'] !== NULL) ? "'{$data['address']}'" : 'NULL') . ', `houseNumber`=' . (($data['houseNumber'] !== '' && $data['houseNumber'] !== NULL) ? "'{$data['houseNumber']}'" : 'NULL') . ', `country`=' . (($data['country'] !== '' && $data['country'] !== NULL) ? "'{$data['country']}'" : 'NULL') . ', `country_name`=' . (($data['country_name'] !== '' && $data['country_name'] !== NULL) ? "'{$data['country_name']}'" : 'NULL') . ', `town`=' . (($data['town'] !== '' && $data['town'] !== NULL) ? "'{$data['town']}'" : 'NULL') . ', `postalCode`=' . (($data['postalCode'] !== '' && $data['postalCode'] !== NULL) ? "'{$data['postalCode']}'" : 'NULL') . ', `district`=' . (($data['district'] !== '' && $data['district'] !== NULL) ? "'{$data['district']}'" : 'NULL') . ', `map`=' . (($data['map'] !== '' && $data['map'] !== NULL) ? "'{$data['map']}'" : 'NULL') . ', `default`=' . (($data['default'] !== '' && $data['default'] !== NULL) ? "'{$data['default']}'" : 'NULL') . ', `ship`=' . (($data['ship'] !== '' && $data['ship'] !== NULL) ? "'{$data['ship']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"addresses_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// automatic contact
	if($_REQUEST['filterer_contact']){
		sql("update `addresses` set `contact`='" . makeSafe($_REQUEST['filterer_contact']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// automatic company
	if($_REQUEST['filterer_company']){
		sql("update `addresses` set `company`='" . makeSafe($_REQUEST['filterer_company']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// hook: addresses_after_insert
	if(function_exists('addresses_after_insert')){
		$res = sql("select * from `addresses` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!addresses_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('addresses', $recID, getLoggedMemberID());

	return $recID;
}

function addresses_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('addresses');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='addresses' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='addresses' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: addresses_before_delete
	if(function_exists('addresses_before_delete')){
		$args=array();
		if(!addresses_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `addresses` where `id`='$selected_id'", $eo);

	// hook: addresses_after_delete
	if(function_exists('addresses_after_delete')){
		$args=array();
		addresses_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='addresses' and pkValue='$selected_id'", $eo);
}

function addresses_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('addresses');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='addresses' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='addresses' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['kind'] = makeSafe($_REQUEST['kind']);
		if($data['kind'] == empty_lookup_value){ $data['kind'] = ''; }
	$data['address'] = makeSafe($_REQUEST['address']);
		if($data['address'] == empty_lookup_value){ $data['address'] = ''; }
	if($data['address']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Address': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['houseNumber'] = makeSafe($_REQUEST['houseNumber']);
		if($data['houseNumber'] == empty_lookup_value){ $data['houseNumber'] = ''; }
	if($data['houseNumber']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'HouseNumber': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['country'] = makeSafe($_REQUEST['country']);
		if($data['country'] == empty_lookup_value){ $data['country'] = ''; }
	if($data['country']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Country Code': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['country_name'] = makeSafe($_REQUEST['country']);
		if($data['country_name'] == empty_lookup_value){ $data['country_name'] = ''; }
	$data['town'] = makeSafe($_REQUEST['town']);
		if($data['town'] == empty_lookup_value){ $data['town'] = ''; }
	if($data['town']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Town': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['postalCode'] = makeSafe($_REQUEST['town']);
		if($data['postalCode'] == empty_lookup_value){ $data['postalCode'] = ''; }
	$data['district'] = makeSafe($_REQUEST['town']);
		if($data['district'] == empty_lookup_value){ $data['district'] = ''; }
	$data['contact'] = makeSafe($_REQUEST['contact']);
		if($data['contact'] == empty_lookup_value){ $data['contact'] = ''; }
	$data['company'] = makeSafe($_REQUEST['company']);
		if($data['company'] == empty_lookup_value){ $data['company'] = ''; }
	$data['map'] = makeSafe($_REQUEST['map']);
		if($data['map'] == empty_lookup_value){ $data['map'] = ''; }
	$data['default'] = makeSafe($_REQUEST['default']);
		if($data['default'] == empty_lookup_value){ $data['default'] = ''; }
	$data['ship'] = makeSafe($_REQUEST['ship']);
		if($data['ship'] == empty_lookup_value){ $data['ship'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: addresses_before_update
	if(function_exists('addresses_before_update')){
		$args=array();
		if(!addresses_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `addresses` set       `kind`=' . (($data['kind'] !== '' && $data['kind'] !== NULL) ? "'{$data['kind']}'" : 'NULL') . ', `address`=' . (($data['address'] !== '' && $data['address'] !== NULL) ? "'{$data['address']}'" : 'NULL') . ', `houseNumber`=' . (($data['houseNumber'] !== '' && $data['houseNumber'] !== NULL) ? "'{$data['houseNumber']}'" : 'NULL') . ', `country`=' . (($data['country'] !== '' && $data['country'] !== NULL) ? "'{$data['country']}'" : 'NULL') . ', `country_name`=' . (($data['country_name'] !== '' && $data['country_name'] !== NULL) ? "'{$data['country_name']}'" : 'NULL') . ', `town`=' . (($data['town'] !== '' && $data['town'] !== NULL) ? "'{$data['town']}'" : 'NULL') . ', `postalCode`=' . (($data['postalCode'] !== '' && $data['postalCode'] !== NULL) ? "'{$data['postalCode']}'" : 'NULL') . ', `district`=' . (($data['district'] !== '' && $data['district'] !== NULL) ? "'{$data['district']}'" : 'NULL') . ', `map`=' . (($data['map'] !== '' && $data['map'] !== NULL) ? "'{$data['map']}'" : 'NULL') . ', `default`=' . (($data['default'] !== '' && $data['default'] !== NULL) ? "'{$data['default']}'" : 'NULL') . ', `ship`=' . (($data['ship'] !== '' && $data['ship'] !== NULL) ? "'{$data['ship']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="addresses_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: addresses_after_update
	if(function_exists('addresses_after_update')){
		$res = sql("SELECT * FROM `addresses` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!addresses_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='addresses' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function addresses_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('addresses');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_kind = thisOr(undo_magic_quotes($_REQUEST['filterer_kind']), '');
	$filterer_country = thisOr(undo_magic_quotes($_REQUEST['filterer_country']), '');
	$filterer_town = thisOr(undo_magic_quotes($_REQUEST['filterer_town']), '');
	$filterer_contact = thisOr(undo_magic_quotes($_REQUEST['filterer_contact']), '');
	$filterer_company = thisOr(undo_magic_quotes($_REQUEST['filterer_company']), '');

	// populate filterers, starting from children to grand-parents
	if($filterer_town && !$filterer_country) $filterer_country = sqlValue("select country from town where id='" . makeSafe($filterer_town) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: kind
	$combo_kind = new DataCombo;
	// combobox: country
	$combo_country = new DataCombo;
	// combobox: town, filterable by: country
	$combo_town = new DataCombo;
	// combobox: contact
	$combo_contact = new DataCombo;
	// combobox: company
	$combo_company = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='addresses' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='addresses' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `addresses` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'addresses_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_kind->SelectedData = $row['kind'];
		$combo_country->SelectedData = $row['country'];
		$combo_town->SelectedData = $row['town'];
		$combo_contact->SelectedData = $row['contact'];
		$combo_company->SelectedData = $row['company'];
	}else{
		$combo_kind->SelectedData = $filterer_kind;
		$combo_country->SelectedData = $filterer_country;
		$combo_town->SelectedData = $filterer_town;
		$combo_contact->SelectedData = $filterer_contact;
		$combo_company->SelectedData = $filterer_company;
	}
	$combo_kind->HTML = '<span id="kind-container' . $rnd1 . '"></span><input type="hidden" name="kind" id="kind' . $rnd1 . '" value="' . html_attr($combo_kind->SelectedData) . '">';
	$combo_kind->MatchText = '<span id="kind-container-readonly' . $rnd1 . '"></span><input type="hidden" name="kind" id="kind' . $rnd1 . '" value="' . html_attr($combo_kind->SelectedData) . '">';
	$combo_country->HTML = '<span id="country-container' . $rnd1 . '"></span><input type="hidden" name="country" id="country' . $rnd1 . '" value="' . html_attr($combo_country->SelectedData) . '">';
	$combo_country->MatchText = '<span id="country-container-readonly' . $rnd1 . '"></span><input type="hidden" name="country" id="country' . $rnd1 . '" value="' . html_attr($combo_country->SelectedData) . '">';
	$combo_town->HTML = '<span id="town-container' . $rnd1 . '"></span><input type="hidden" name="town" id="town' . $rnd1 . '" value="' . html_attr($combo_town->SelectedData) . '">';
	$combo_town->MatchText = '<span id="town-container-readonly' . $rnd1 . '"></span><input type="hidden" name="town" id="town' . $rnd1 . '" value="' . html_attr($combo_town->SelectedData) . '">';
	$combo_contact->HTML = '<span id="contact-container' . $rnd1 . '"></span><input type="hidden" name="contact" id="contact' . $rnd1 . '" value="' . html_attr($combo_contact->SelectedData) . '">';
	$combo_contact->MatchText = '<span id="contact-container-readonly' . $rnd1 . '"></span><input type="hidden" name="contact" id="contact' . $rnd1 . '" value="' . html_attr($combo_contact->SelectedData) . '">';
	$combo_company->HTML = '<span id="company-container' . $rnd1 . '"></span><input type="hidden" name="company" id="company' . $rnd1 . '" value="' . html_attr($combo_company->SelectedData) . '">';
	$combo_company->MatchText = '<span id="company-container-readonly' . $rnd1 . '"></span><input type="hidden" name="company" id="company' . $rnd1 . '" value="' . html_attr($combo_company->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_kind__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['kind'] : $filterer_kind); ?>"};
		AppGini.current_country__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['country'] : $filterer_country); ?>"};
		AppGini.current_town__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['town'] : $filterer_town); ?>"};
		AppGini.current_contact__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['contact'] : $filterer_contact); ?>"};
		AppGini.current_company__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['company'] : $filterer_company); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(kind_reload__RAND__) == 'function') kind_reload__RAND__();
				if(typeof(country_reload__RAND__) == 'function') country_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(town_reload__RAND__) == \'function\') town_reload__RAND__(AppGini.current_country__RAND__.value);' : ''); ?>
				if(typeof(contact_reload__RAND__) == 'function') contact_reload__RAND__();
				if(typeof(company_reload__RAND__) == 'function') company_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function kind_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#kind-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_kind__RAND__.value, t: 'addresses', f: 'kind' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="kind"]').val(resp.results[0].id);
							$j('[id=kind-container-readonly__RAND__]').html('<span id="kind-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


							if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'addresses', f: 'kind' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_kind__RAND__.value = e.added.id;
				AppGini.current_kind__RAND__.text = e.added.text;
				$j('[name="kind"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


				if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
			});

			if(!$j("#kind-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_kind__RAND__.value, t: 'addresses', f: 'kind' },
					success: function(resp){
						$j('[name="kind"]').val(resp.results[0].id);
						$j('[id=kind-container-readonly__RAND__]').html('<span id="kind-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

						if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_kind__RAND__.value, t: 'addresses', f: 'kind' },
				success: function(resp){
					$j('[id=kind-container__RAND__], [id=kind-container-readonly__RAND__]').html('<span id="kind-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

					if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function country_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#country-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_country__RAND__.value, t: 'addresses', f: 'country' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="country"]').val(resp.results[0].id);
							$j('[id=country-container-readonly__RAND__]').html('<span id="country-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=countries_view_parent]').hide(); }else{ $j('.btn[id=countries_view_parent]').show(); }

						if(typeof(town_reload__RAND__) == 'function') town_reload__RAND__(AppGini.current_country__RAND__.value);

							if(typeof(country_update_autofills__RAND__) == 'function') country_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'addresses', f: 'country' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_country__RAND__.value = e.added.id;
				AppGini.current_country__RAND__.text = e.added.text;
				$j('[name="country"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=countries_view_parent]').hide(); }else{ $j('.btn[id=countries_view_parent]').show(); }

						if(typeof(town_reload__RAND__) == 'function') town_reload__RAND__(AppGini.current_country__RAND__.value);

				if(typeof(country_update_autofills__RAND__) == 'function') country_update_autofills__RAND__();
			});

			if(!$j("#country-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_country__RAND__.value, t: 'addresses', f: 'country' },
					success: function(resp){
						$j('[name="country"]').val(resp.results[0].id);
						$j('[id=country-container-readonly__RAND__]').html('<span id="country-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=countries_view_parent]').hide(); }else{ $j('.btn[id=countries_view_parent]').show(); }

						if(typeof(country_update_autofills__RAND__) == 'function') country_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_country__RAND__.value, t: 'addresses', f: 'country' },
				success: function(resp){
					$j('[id=country-container__RAND__], [id=country-container-readonly__RAND__]').html('<span id="country-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=countries_view_parent]').hide(); }else{ $j('.btn[id=countries_view_parent]').show(); }

					if(typeof(country_update_autofills__RAND__) == 'function') country_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function town_reload__RAND__(filterer_country){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#town-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_country: filterer_country, id: AppGini.current_town__RAND__.value, t: 'addresses', f: 'town' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="town"]').val(resp.results[0].id);
							$j('[id=town-container-readonly__RAND__]').html('<span id="town-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=town_view_parent]').hide(); }else{ $j('.btn[id=town_view_parent]').show(); }


							if(typeof(town_update_autofills__RAND__) == 'function') town_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { filterer_country: filterer_country, s: term, p: page, t: 'addresses', f: 'town' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_town__RAND__.value = e.added.id;
				AppGini.current_town__RAND__.text = e.added.text;
				$j('[name="town"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=town_view_parent]').hide(); }else{ $j('.btn[id=town_view_parent]').show(); }


				if(typeof(town_update_autofills__RAND__) == 'function') town_update_autofills__RAND__();
			});

			if(!$j("#town-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_town__RAND__.value, t: 'addresses', f: 'town' },
					success: function(resp){
						$j('[name="town"]').val(resp.results[0].id);
						$j('[id=town-container-readonly__RAND__]').html('<span id="town-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=town_view_parent]').hide(); }else{ $j('.btn[id=town_view_parent]').show(); }

						if(typeof(town_update_autofills__RAND__) == 'function') town_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_town__RAND__.value, t: 'addresses', f: 'town' },
				success: function(resp){
					$j('[id=town-container__RAND__], [id=town-container-readonly__RAND__]').html('<span id="town-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=town_view_parent]').hide(); }else{ $j('.btn[id=town_view_parent]').show(); }

					if(typeof(town_update_autofills__RAND__) == 'function') town_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function contact_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#contact-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_contact__RAND__.value, t: 'addresses', f: 'contact' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="contact"]').val(resp.results[0].id);
							$j('[id=contact-container-readonly__RAND__]').html('<span id="contact-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=contacts_view_parent]').hide(); }else{ $j('.btn[id=contacts_view_parent]').show(); }


							if(typeof(contact_update_autofills__RAND__) == 'function') contact_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'addresses', f: 'contact' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_contact__RAND__.value = e.added.id;
				AppGini.current_contact__RAND__.text = e.added.text;
				$j('[name="contact"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=contacts_view_parent]').hide(); }else{ $j('.btn[id=contacts_view_parent]').show(); }


				if(typeof(contact_update_autofills__RAND__) == 'function') contact_update_autofills__RAND__();
			});

			if(!$j("#contact-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_contact__RAND__.value, t: 'addresses', f: 'contact' },
					success: function(resp){
						$j('[name="contact"]').val(resp.results[0].id);
						$j('[id=contact-container-readonly__RAND__]').html('<span id="contact-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=contacts_view_parent]').hide(); }else{ $j('.btn[id=contacts_view_parent]').show(); }

						if(typeof(contact_update_autofills__RAND__) == 'function') contact_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_contact__RAND__.value, t: 'addresses', f: 'contact' },
				success: function(resp){
					$j('[id=contact-container__RAND__], [id=contact-container-readonly__RAND__]').html('<span id="contact-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=contacts_view_parent]').hide(); }else{ $j('.btn[id=contacts_view_parent]').show(); }

					if(typeof(contact_update_autofills__RAND__) == 'function') contact_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function company_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#company-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_company__RAND__.value, t: 'addresses', f: 'company' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="company"]').val(resp.results[0].id);
							$j('[id=company-container-readonly__RAND__]').html('<span id="company-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


							if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'addresses', f: 'company' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_company__RAND__.value = e.added.id;
				AppGini.current_company__RAND__.text = e.added.text;
				$j('[name="company"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


				if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
			});

			if(!$j("#company-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_company__RAND__.value, t: 'addresses', f: 'company' },
					success: function(resp){
						$j('[name="company"]').val(resp.results[0].id);
						$j('[id=company-container-readonly__RAND__]').html('<span id="company-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

						if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_company__RAND__.value, t: 'addresses', f: 'company' },
				success: function(resp){
					$j('[id=company-container__RAND__], [id=company-container-readonly__RAND__]').html('<span id="company-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

					if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/addresses_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/addresses_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Addresse details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return addresses_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return addresses_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return addresses_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#kind').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#kind_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#address').replaceWith('<div class=\"form-control-static\" id=\"address\">' + (jQuery('#address').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#houseNumber').replaceWith('<div class=\"form-control-static\" id=\"houseNumber\">' + (jQuery('#houseNumber').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#country').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#country_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#town').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#town_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#map').replaceWith('');\n";
		$jsReadOnly .= "\tjQuery('#map, #map-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#default').prop('disabled', true);\n";
		$jsReadOnly .= "\tjQuery('#ship').prop('disabled', true);\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(kind)%%>', $combo_kind->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(kind)%%>', $combo_kind->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(kind)%%>', urlencode($combo_kind->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(country)%%>', $combo_country->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(country)%%>', $combo_country->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(country)%%>', urlencode($combo_country->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(town)%%>', $combo_town->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(town)%%>', $combo_town->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(town)%%>', urlencode($combo_town->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(contact)%%>', $combo_contact->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(contact)%%>', $combo_contact->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(contact)%%>', urlencode($combo_contact->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(company)%%>', $combo_company->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(company)%%>', $combo_company->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(company)%%>', urlencode($combo_company->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'kind' => array('kinds', 'Tipo'), 'country' => array('countries', 'Country Code'), 'town' => array('town', 'Town'), 'contact' => array('contacts', 'Contact'), 'company' => array('companies', 'Company'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(kind)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(address)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(houseNumber)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(country)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(town)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(contact)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(company)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(map)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(default)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(ship)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(kind)%%>', safe_html($urow['kind']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(kind)%%>', html_attr($row['kind']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(kind)%%>', urlencode($urow['kind']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(address)%%>', safe_html($urow['address']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(address)%%>', html_attr($row['address']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(address)%%>', urlencode($urow['address']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(houseNumber)%%>', safe_html($urow['houseNumber']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(houseNumber)%%>', html_attr($row['houseNumber']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(houseNumber)%%>', urlencode($urow['houseNumber']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(country)%%>', safe_html($urow['country']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(country)%%>', html_attr($row['country']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(country)%%>', urlencode($urow['country']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(town)%%>', safe_html($urow['town']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(town)%%>', html_attr($row['town']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(town)%%>', urlencode($urow['town']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(contact)%%>', safe_html($urow['contact']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(contact)%%>', html_attr($row['contact']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(contact)%%>', urlencode($urow['contact']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(company)%%>', safe_html($urow['company']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(company)%%>', html_attr($row['company']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(company)%%>', urlencode($urow['company']), $templateCode);
		$templateCode = str_replace('<%%VALUE(map)%%>', html_attr($row['map']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(map)%%>', urlencode($urow['map']), $templateCode);
		$templateCode = str_replace('<%%GOOGLEMAP(map)%%>', get_embed('googlemap', $urow['map'], '480', '360'), $templateCode);
		$templateCode = str_replace('<%%GOOGLEMAPTHUMB(map)%%>', thisOr(get_embed('googlemap', $urow['map'], '480', '360', 'thumbnail_url'), 'blank.gif'), $templateCode);
		$templateCode = str_replace('<%%CHECKED(default)%%>', ($row['default'] ? "checked" : ""), $templateCode);
		$templateCode = str_replace('<%%CHECKED(ship)%%>', ($row['ship'] ? "checked" : ""), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(kind)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(kind)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(address)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(address)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(houseNumber)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(houseNumber)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(country)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(country)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(town)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(town)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(contact)%%>', ( $_REQUEST['FilterField'][1]=='10' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_contact->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(contact)%%>', urlencode( $_REQUEST['FilterField'][1]=='10' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_contact->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%VALUE(company)%%>', ( $_REQUEST['FilterField'][1]=='11' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_company->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(company)%%>', urlencode( $_REQUEST['FilterField'][1]=='11' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_company->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%VALUE(map)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(map)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%GOOGLEMAP(map)%%>', '', $templateCode);
		$templateCode = str_replace('<%%GOOGLEMAPTHUMB(map)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%CHECKED(default)%%>', '', $templateCode);
		$templateCode = str_replace('<%%CHECKED(ship)%%>', '', $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tcountry_update_autofills$rnd1 = function(){\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint){
		$templateCode .= "\t\t\turl: 'addresses_autofill.php?rnd1=$rnd1&mfk=country&id=' + encodeURIComponent('".addslashes($row['country'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET'\n";
	}else{
		$templateCode .= "\t\t\turl: 'addresses_autofill.php?rnd1=$rnd1&mfk=country&id=' + encodeURIComponent(AppGini.current_country{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET', beforeSend: function(){ /* */ \$j('#country$rnd1').prop('disabled', true); \$j('#countryLoading').html('<img src=loading.gif align=top>'); }, complete: function(){".(($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#country$rnd1').prop('disabled', false); " : "\$j('#country$rnd1').prop('disabled', true); ")."\$j('#countryLoading').html('');}\n";
	}
	$templateCode.="\t\t});\n";
	$templateCode.="\t};\n";
	if(!$dvprint) $templateCode.="\tif(\$j('#country_caption').length) \$j('#country_caption').click(function(){ /* */ country_update_autofills$rnd1(); });\n";

	$templateCode .= "\ttown_update_autofills$rnd1 = function(){\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint){
		$templateCode .= "\t\t\turl: 'addresses_autofill.php?rnd1=$rnd1&mfk=town&id=' + encodeURIComponent('".addslashes($row['town'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET'\n";
	}else{
		$templateCode .= "\t\t\turl: 'addresses_autofill.php?rnd1=$rnd1&mfk=town&id=' + encodeURIComponent(AppGini.current_town{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET', beforeSend: function(){ /* */ \$j('#town$rnd1').prop('disabled', true); \$j('#townLoading').html('<img src=loading.gif align=top>'); }, complete: function(){".(($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#town$rnd1').prop('disabled', false); " : "\$j('#town$rnd1').prop('disabled', true); ")."\$j('#townLoading').html('');}\n";
	}
	$templateCode.="\t\t});\n";
	$templateCode.="\t};\n";
	if(!$dvprint) $templateCode.="\tif(\$j('#town_caption').length) \$j('#town_caption').click(function(){ /* */ town_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('addresses');
	if($selected_id){
		$jdata = get_joined_record('addresses', $selected_id);
		if($jdata === false) $jdata = get_defaults('addresses');
		$rdata = $row;
	}
	$templateCode .= loadView('addresses-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: addresses_dv
	if(function_exists('addresses_dv')){
		$args=array();
		addresses_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>