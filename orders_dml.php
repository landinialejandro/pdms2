<?php

// Data functions (insert, update, delete, form) for table orders

// This script and data application were generated by AppGini 5.72
// Download AppGini for free from https://bigprof.com/appgini/download/

function orders_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('orders');
	if(!$arrPerm[1]){
		return false;
	}

	$data['kind'] = makeSafe($_REQUEST['kind']);
		if($data['kind'] == empty_lookup_value){ $data['kind'] = ''; }
	$data['progressiveNr'] = makeSafe($_REQUEST['progressiveNr']);
		if($data['progressiveNr'] == empty_lookup_value){ $data['progressiveNr'] = ''; }
	$data['consigneeID'] = makeSafe($_REQUEST['consigneeID']);
		if($data['consigneeID'] == empty_lookup_value){ $data['consigneeID'] = ''; }
	$data['company'] = makeSafe($_REQUEST['company']);
		if($data['company'] == empty_lookup_value){ $data['company'] = ''; }
	$data['typeDoc'] = makeSafe($_REQUEST['typeDoc']);
		if($data['typeDoc'] == empty_lookup_value){ $data['typeDoc'] = ''; }
	$data['multiOrder'] = makeSafe($_REQUEST['multiOrder']);
		if($data['multiOrder'] == empty_lookup_value){ $data['multiOrder'] = ''; }
	$data['customer'] = makeSafe($_REQUEST['customer']);
		if($data['customer'] == empty_lookup_value){ $data['customer'] = ''; }
	$data['employee'] = makeSafe($_REQUEST['employee']);
		if($data['employee'] == empty_lookup_value){ $data['employee'] = ''; }
	$data['date'] = intval($_REQUEST['dateYear']) . '-' . intval($_REQUEST['dateMonth']) . '-' . intval($_REQUEST['dateDay']);
	$data['date'] = parseMySQLDate($data['date'], '1');
	$data['requiredDate'] = intval($_REQUEST['requiredDateYear']) . '-' . intval($_REQUEST['requiredDateMonth']) . '-' . intval($_REQUEST['requiredDateDay']);
	$data['requiredDate'] = parseMySQLDate($data['requiredDate'], '<%%creationDate%%>');
	$data['shippedDate'] = intval($_REQUEST['shippedDateYear']) . '-' . intval($_REQUEST['shippedDateMonth']) . '-' . intval($_REQUEST['shippedDateDay']);
	$data['shippedDate'] = parseMySQLDate($data['shippedDate'], '<%%creationDate%%>');
	$data['shipVia'] = makeSafe($_REQUEST['shipVia']);
		if($data['shipVia'] == empty_lookup_value){ $data['shipVia'] = ''; }
	$data['Freight'] = makeSafe($_REQUEST['Freight']);
		if($data['Freight'] == empty_lookup_value){ $data['Freight'] = ''; }
	$data['pallets'] = makeSafe($_REQUEST['pallets']);
		if($data['pallets'] == empty_lookup_value){ $data['pallets'] = ''; }
	$data['licencePlate'] = makeSafe($_REQUEST['licencePlate']);
		if($data['licencePlate'] == empty_lookup_value){ $data['licencePlate'] = ''; }
	$data['orderTotal'] = makeSafe($_REQUEST['orderTotal']);
		if($data['orderTotal'] == empty_lookup_value){ $data['orderTotal'] = ''; }
	$data['cashCredit'] = makeSafe($_REQUEST['cashCredit']);
		if($data['cashCredit'] == empty_lookup_value){ $data['cashCredit'] = ''; }
	$data['trust'] = makeSafe($_REQUEST['trust']);
		if($data['trust'] == empty_lookup_value){ $data['trust'] = ''; }
	$data['overdraft'] = makeSafe($_REQUEST['overdraft']);
		if($data['overdraft'] == empty_lookup_value){ $data['overdraft'] = ''; }
	$data['commisionFee'] = makeSafe($_REQUEST['commisionFee']);
		if($data['commisionFee'] == empty_lookup_value){ $data['commisionFee'] = ''; }
	$data['consigneeHour'] = mysql_datetime($_REQUEST['consigneeHour']);
		if($data['consigneeHour'] == empty_lookup_value){ $data['consigneeHour'] = ''; }
	$data['consigneePlace'] = makeSafe($_REQUEST['consigneePlace']);
		if($data['consigneePlace'] == empty_lookup_value){ $data['consigneePlace'] = ''; }
	$data['related'] = makeSafe($_REQUEST['related']);
		if($data['related'] == empty_lookup_value){ $data['related'] = ''; }
	if($data['kind']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Kind Order': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['trasmissionFor'] == '') $data['trasmissionFor'] = "SDI10";
	if($data['company']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'ID Azienda': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['typeDoc']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Tipo documento': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['multiOrder']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Numero documento': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	// hook: orders_before_insert
	if(function_exists('orders_before_insert')){
		$args=array();
		if(!orders_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `orders` set       `kind`=' . (($data['kind'] !== '' && $data['kind'] !== NULL) ? "'{$data['kind']}'" : 'NULL') . ', `company`=' . (($data['company'] !== '' && $data['company'] !== NULL) ? "'{$data['company']}'" : 'NULL') . ', `typeDoc`=' . (($data['typeDoc'] !== '' && $data['typeDoc'] !== NULL) ? "'{$data['typeDoc']}'" : 'NULL') . ', `multiOrder`=' . (($data['multiOrder'] !== '' && $data['multiOrder'] !== NULL) ? "'{$data['multiOrder']}'" : 'NULL') . ', `customer`=' . (($data['customer'] !== '' && $data['customer'] !== NULL) ? "'{$data['customer']}'" : 'NULL') . ', `date`=' . (($data['date'] !== '' && $data['date'] !== NULL) ? "'{$data['date']}'" : 'NULL') . ', `shippedDate`=' . (($data['shippedDate'] !== '' && $data['shippedDate'] !== NULL) ? "'{$data['shippedDate']}'" : 'NULL') . ', `shipVia`=' . (($data['shipVia'] !== '' && $data['shipVia'] !== NULL) ? "'{$data['shipVia']}'" : 'NULL') . ', `Freight`=' . (($data['Freight'] !== '' && $data['Freight'] !== NULL) ? "'{$data['Freight']}'" : 'NULL') . ', `pallets`=' . (($data['pallets'] !== '' && $data['pallets'] !== NULL) ? "'{$data['pallets']}'" : 'NULL') . ', `licencePlate`=' . (($data['licencePlate'] !== '' && $data['licencePlate'] !== NULL) ? "'{$data['licencePlate']}'" : 'NULL') . ', `orderTotal`=' . (($data['orderTotal'] !== '' && $data['orderTotal'] !== NULL) ? "'{$data['orderTotal']}'" : 'NULL') . ', `cashCredit`=' . (($data['cashCredit'] !== '' && $data['cashCredit'] !== NULL) ? "'{$data['cashCredit']}'" : 'NULL') . ', `trust`=' . (($data['trust'] !== '' && $data['trust'] !== NULL) ? "'{$data['trust']}'" : 'NULL') . ', `overdraft`=' . (($data['overdraft'] !== '' && $data['overdraft'] !== NULL) ? "'{$data['overdraft']}'" : 'NULL') . ', `commisionFee`=' . (($data['commisionFee'] !== '' && $data['commisionFee'] !== NULL) ? "'{$data['commisionFee']}'" : 'NULL') . ', `consigneeHour`=' . (($data['consigneeHour'] !== '' && $data['consigneeHour'] !== NULL) ? "'{$data['consigneeHour']}'" : 'NULL') . ', `consigneePlace`=' . (($data['consigneePlace'] !== '' && $data['consigneePlace'] !== NULL) ? "'{$data['consigneePlace']}'" : 'NULL') . ', `related`=' . (($data['related'] !== '' && $data['related'] !== NULL) ? "'{$data['related']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"orders_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// automatic employee
	if($_REQUEST['filterer_employee']){
		sql("update `orders` set `employee`='" . makeSafe($_REQUEST['filterer_employee']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// hook: orders_after_insert
	if(function_exists('orders_after_insert')){
		$res = sql("select * from `orders` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!orders_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('orders', $recID, getLoggedMemberID());

	return $recID;
}

function orders_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('orders');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='orders' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='orders' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: orders_before_delete
	if(function_exists('orders_before_delete')){
		$args=array();
		if(!orders_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: ordersDetails
	$res = sql("select `id` from `orders` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `ordersDetails` where `order`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ordersDetails", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ordersDetails", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='orders_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='orders_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: _resumeOrders
	$res = sql("select `id` from `orders` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `_resumeOrders` where `related`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "_resumeOrders", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "_resumeOrders", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='orders_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='orders_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: firstCashNote
	$res = sql("select `id` from `orders` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `firstCashNote` where `order`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "firstCashNote", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "firstCashNote", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='orders_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='orders_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `orders` where `id`='$selected_id'", $eo);

	// hook: orders_after_delete
	if(function_exists('orders_after_delete')){
		$args=array();
		orders_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='orders' and pkValue='$selected_id'", $eo);
}

function orders_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('orders');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='orders' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='orders' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['kind'] = makeSafe($_REQUEST['kind']);
		if($data['kind'] == empty_lookup_value){ $data['kind'] = ''; }
	if($data['kind']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Kind Order': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['progressiveNr'] = makeSafe($_REQUEST['progressiveNr']);
		if($data['progressiveNr'] == empty_lookup_value){ $data['progressiveNr'] = ''; }
	$data['consigneeID'] = makeSafe($_REQUEST['consigneeID']);
		if($data['consigneeID'] == empty_lookup_value){ $data['consigneeID'] = ''; }
	$data['company'] = makeSafe($_REQUEST['company']);
		if($data['company'] == empty_lookup_value){ $data['company'] = ''; }
	if($data['company']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'ID Azienda': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['typeDoc'] = makeSafe($_REQUEST['typeDoc']);
		if($data['typeDoc'] == empty_lookup_value){ $data['typeDoc'] = ''; }
	if($data['typeDoc']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Tipo documento': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['multiOrder'] = makeSafe($_REQUEST['multiOrder']);
		if($data['multiOrder'] == empty_lookup_value){ $data['multiOrder'] = ''; }
	if($data['multiOrder']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Numero documento': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['customer'] = makeSafe($_REQUEST['customer']);
		if($data['customer'] == empty_lookup_value){ $data['customer'] = ''; }
	$data['employee'] = makeSafe($_REQUEST['employee']);
		if($data['employee'] == empty_lookup_value){ $data['employee'] = ''; }
	$data['date'] = intval($_REQUEST['dateYear']) . '-' . intval($_REQUEST['dateMonth']) . '-' . intval($_REQUEST['dateDay']);
	$data['date'] = parseMySQLDate($data['date'], '1');
	$data['requiredDate'] = intval($_REQUEST['requiredDateYear']) . '-' . intval($_REQUEST['requiredDateMonth']) . '-' . intval($_REQUEST['requiredDateDay']);
	$data['requiredDate'] = parseMySQLDate($data['requiredDate'], '<%%creationDate%%>');
	$data['shippedDate'] = intval($_REQUEST['shippedDateYear']) . '-' . intval($_REQUEST['shippedDateMonth']) . '-' . intval($_REQUEST['shippedDateDay']);
	$data['shippedDate'] = parseMySQLDate($data['shippedDate'], '<%%creationDate%%>');
	$data['shipVia'] = makeSafe($_REQUEST['shipVia']);
		if($data['shipVia'] == empty_lookup_value){ $data['shipVia'] = ''; }
	$data['Freight'] = makeSafe($_REQUEST['Freight']);
		if($data['Freight'] == empty_lookup_value){ $data['Freight'] = ''; }
	$data['pallets'] = makeSafe($_REQUEST['pallets']);
		if($data['pallets'] == empty_lookup_value){ $data['pallets'] = ''; }
	$data['licencePlate'] = makeSafe($_REQUEST['licencePlate']);
		if($data['licencePlate'] == empty_lookup_value){ $data['licencePlate'] = ''; }
	$data['orderTotal'] = makeSafe($_REQUEST['orderTotal']);
		if($data['orderTotal'] == empty_lookup_value){ $data['orderTotal'] = ''; }
	$data['cashCredit'] = makeSafe($_REQUEST['cashCredit']);
		if($data['cashCredit'] == empty_lookup_value){ $data['cashCredit'] = ''; }
	$data['trust'] = makeSafe($_REQUEST['trust']);
		if($data['trust'] == empty_lookup_value){ $data['trust'] = ''; }
	$data['overdraft'] = makeSafe($_REQUEST['overdraft']);
		if($data['overdraft'] == empty_lookup_value){ $data['overdraft'] = ''; }
	$data['commisionFee'] = makeSafe($_REQUEST['commisionFee']);
		if($data['commisionFee'] == empty_lookup_value){ $data['commisionFee'] = ''; }
	$data['consigneeHour'] = mysql_datetime($_REQUEST['consigneeHour']);
		if($data['consigneeHour'] == empty_lookup_value){ $data['consigneeHour'] = ''; }
	$data['consigneePlace'] = makeSafe($_REQUEST['consigneePlace']);
		if($data['consigneePlace'] == empty_lookup_value){ $data['consigneePlace'] = ''; }
	$data['related'] = makeSafe($_REQUEST['related']);
		if($data['related'] == empty_lookup_value){ $data['related'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: orders_before_update
	if(function_exists('orders_before_update')){
		$args=array();
		if(!orders_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `orders` set       `kind`=' . (($data['kind'] !== '' && $data['kind'] !== NULL) ? "'{$data['kind']}'" : 'NULL') . ', `company`=' . (($data['company'] !== '' && $data['company'] !== NULL) ? "'{$data['company']}'" : 'NULL') . ', `typeDoc`=' . (($data['typeDoc'] !== '' && $data['typeDoc'] !== NULL) ? "'{$data['typeDoc']}'" : 'NULL') . ', `multiOrder`=' . (($data['multiOrder'] !== '' && $data['multiOrder'] !== NULL) ? "'{$data['multiOrder']}'" : 'NULL') . ', `customer`=' . (($data['customer'] !== '' && $data['customer'] !== NULL) ? "'{$data['customer']}'" : 'NULL') . ', `date`=' . (($data['date'] !== '' && $data['date'] !== NULL) ? "'{$data['date']}'" : 'NULL') . ', `shippedDate`=' . (($data['shippedDate'] !== '' && $data['shippedDate'] !== NULL) ? "'{$data['shippedDate']}'" : 'NULL') . ', `shipVia`=' . (($data['shipVia'] !== '' && $data['shipVia'] !== NULL) ? "'{$data['shipVia']}'" : 'NULL') . ', `Freight`=' . (($data['Freight'] !== '' && $data['Freight'] !== NULL) ? "'{$data['Freight']}'" : 'NULL') . ', `pallets`=' . (($data['pallets'] !== '' && $data['pallets'] !== NULL) ? "'{$data['pallets']}'" : 'NULL') . ', `licencePlate`=' . (($data['licencePlate'] !== '' && $data['licencePlate'] !== NULL) ? "'{$data['licencePlate']}'" : 'NULL') . ', `orderTotal`=' . (($data['orderTotal'] !== '' && $data['orderTotal'] !== NULL) ? "'{$data['orderTotal']}'" : 'NULL') . ', `cashCredit`=' . (($data['cashCredit'] !== '' && $data['cashCredit'] !== NULL) ? "'{$data['cashCredit']}'" : 'NULL') . ', `trust`=' . (($data['trust'] !== '' && $data['trust'] !== NULL) ? "'{$data['trust']}'" : 'NULL') . ', `overdraft`=' . (($data['overdraft'] !== '' && $data['overdraft'] !== NULL) ? "'{$data['overdraft']}'" : 'NULL') . ', `commisionFee`=' . (($data['commisionFee'] !== '' && $data['commisionFee'] !== NULL) ? "'{$data['commisionFee']}'" : 'NULL') . ', `consigneeHour`=' . (($data['consigneeHour'] !== '' && $data['consigneeHour'] !== NULL) ? "'{$data['consigneeHour']}'" : 'NULL') . ', `consigneePlace`=' . (($data['consigneePlace'] !== '' && $data['consigneePlace'] !== NULL) ? "'{$data['consigneePlace']}'" : 'NULL') . ', `related`=' . (($data['related'] !== '' && $data['related'] !== NULL) ? "'{$data['related']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="orders_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: orders_after_update
	if(function_exists('orders_after_update')){
		$res = sql("SELECT * FROM `orders` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!orders_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='orders' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function orders_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('orders');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_kind = thisOr(undo_magic_quotes($_REQUEST['filterer_kind']), '');
	$filterer_company = thisOr(undo_magic_quotes($_REQUEST['filterer_company']), '');
	$filterer_typeDoc = thisOr(undo_magic_quotes($_REQUEST['filterer_typeDoc']), '');
	$filterer_customer = thisOr(undo_magic_quotes($_REQUEST['filterer_customer']), '');
	$filterer_employee = thisOr(undo_magic_quotes($_REQUEST['filterer_employee']), '');
	$filterer_shipVia = thisOr(undo_magic_quotes($_REQUEST['filterer_shipVia']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: kind
	$combo_kind = new DataCombo;
	// combobox: consigneeID
	$combo_consigneeID = new Combo;
	$combo_consigneeID->ListType = 0;
	$combo_consigneeID->MultipleSeparator = ', ';
	$combo_consigneeID->ListBoxHeight = 10;
	$combo_consigneeID->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/orders.consigneeID.csv')){
		$consigneeID_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/orders.consigneeID.csv')));
		$combo_consigneeID->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($consigneeID_data)));
		$combo_consigneeID->ListData = $combo_consigneeID->ListItem;
	}else{
		$combo_consigneeID->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("AAAAAA;;BBBBBB")));
		$combo_consigneeID->ListData = $combo_consigneeID->ListItem;
	}
	$combo_consigneeID->SelectName = 'consigneeID';
	// combobox: company
	$combo_company = new DataCombo;
	// combobox: typeDoc
	$combo_typeDoc = new DataCombo;
	// combobox: customer
	$combo_customer = new DataCombo;
	// combobox: employee
	$combo_employee = new DataCombo;
	// combobox: date
	$combo_date = new DateCombo;
	$combo_date->DateFormat = "dmy";
	$combo_date->MinYear = 1900;
	$combo_date->MaxYear = 2100;
	$combo_date->DefaultDate = parseMySQLDate('1', '1');
	$combo_date->MonthNames = $Translation['month names'];
	$combo_date->NamePrefix = 'date';
	// combobox: requiredDate
	$combo_requiredDate = new DateCombo;
	$combo_requiredDate->DateFormat = "dmy";
	$combo_requiredDate->MinYear = 1900;
	$combo_requiredDate->MaxYear = 2100;
	$combo_requiredDate->DefaultDate = parseMySQLDate('<%%creationDate%%>', '<%%creationDate%%>');
	$combo_requiredDate->MonthNames = $Translation['month names'];
	$combo_requiredDate->NamePrefix = 'requiredDate';
	// combobox: shippedDate
	$combo_shippedDate = new DateCombo;
	$combo_shippedDate->DateFormat = "dmy";
	$combo_shippedDate->MinYear = 1900;
	$combo_shippedDate->MaxYear = 2100;
	$combo_shippedDate->DefaultDate = parseMySQLDate('<%%creationDate%%>', '<%%creationDate%%>');
	$combo_shippedDate->MonthNames = $Translation['month names'];
	$combo_shippedDate->NamePrefix = 'shippedDate';
	// combobox: shipVia
	$combo_shipVia = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='orders' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='orders' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `orders` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'orders_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_kind->SelectedData = $row['kind'];
		$combo_consigneeID->SelectedData = $row['consigneeID'];
		$combo_company->SelectedData = $row['company'];
		$combo_typeDoc->SelectedData = $row['typeDoc'];
		$combo_customer->SelectedData = $row['customer'];
		$combo_employee->SelectedData = $row['employee'];
		$combo_date->DefaultDate = $row['date'];
		$combo_requiredDate->DefaultDate = $row['requiredDate'];
		$combo_shippedDate->DefaultDate = $row['shippedDate'];
		$combo_shipVia->SelectedData = $row['shipVia'];
	}else{
		$combo_kind->SelectedData = $filterer_kind;
		$combo_consigneeID->SelectedText = ( $_REQUEST['FilterField'][1]=='5' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_company->SelectedData = $filterer_company;
		$combo_typeDoc->SelectedData = $filterer_typeDoc;
		$combo_customer->SelectedData = $filterer_customer;
		$combo_employee->SelectedData = $filterer_employee;
		$combo_shipVia->SelectedData = $filterer_shipVia;
	}
	$combo_kind->HTML = '<span id="kind-container' . $rnd1 . '"></span><input type="hidden" name="kind" id="kind' . $rnd1 . '" value="' . html_attr($combo_kind->SelectedData) . '">';
	$combo_kind->MatchText = '<span id="kind-container-readonly' . $rnd1 . '"></span><input type="hidden" name="kind" id="kind' . $rnd1 . '" value="' . html_attr($combo_kind->SelectedData) . '">';
	$combo_consigneeID->Render();
	$combo_company->HTML = '<span id="company-container' . $rnd1 . '"></span><input type="hidden" name="company" id="company' . $rnd1 . '" value="' . html_attr($combo_company->SelectedData) . '">';
	$combo_company->MatchText = '<span id="company-container-readonly' . $rnd1 . '"></span><input type="hidden" name="company" id="company' . $rnd1 . '" value="' . html_attr($combo_company->SelectedData) . '">';
	$combo_typeDoc->HTML = '<span id="typeDoc-container' . $rnd1 . '"></span><input type="hidden" name="typeDoc" id="typeDoc' . $rnd1 . '" value="' . html_attr($combo_typeDoc->SelectedData) . '">';
	$combo_typeDoc->MatchText = '<span id="typeDoc-container-readonly' . $rnd1 . '"></span><input type="hidden" name="typeDoc" id="typeDoc' . $rnd1 . '" value="' . html_attr($combo_typeDoc->SelectedData) . '">';
	$combo_customer->HTML = '<span id="customer-container' . $rnd1 . '"></span><input type="hidden" name="customer" id="customer' . $rnd1 . '" value="' . html_attr($combo_customer->SelectedData) . '">';
	$combo_customer->MatchText = '<span id="customer-container-readonly' . $rnd1 . '"></span><input type="hidden" name="customer" id="customer' . $rnd1 . '" value="' . html_attr($combo_customer->SelectedData) . '">';
	$combo_employee->HTML = '<span id="employee-container' . $rnd1 . '"></span><input type="hidden" name="employee" id="employee' . $rnd1 . '" value="' . html_attr($combo_employee->SelectedData) . '">';
	$combo_employee->MatchText = '<span id="employee-container-readonly' . $rnd1 . '"></span><input type="hidden" name="employee" id="employee' . $rnd1 . '" value="' . html_attr($combo_employee->SelectedData) . '">';
	$combo_shipVia->HTML = '<span id="shipVia-container' . $rnd1 . '"></span><input type="hidden" name="shipVia" id="shipVia' . $rnd1 . '" value="' . html_attr($combo_shipVia->SelectedData) . '">';
	$combo_shipVia->MatchText = '<span id="shipVia-container-readonly' . $rnd1 . '"></span><input type="hidden" name="shipVia" id="shipVia' . $rnd1 . '" value="' . html_attr($combo_shipVia->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_kind__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['kind'] : $filterer_kind); ?>"};
		AppGini.current_company__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['company'] : $filterer_company); ?>"};
		AppGini.current_typeDoc__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['typeDoc'] : $filterer_typeDoc); ?>"};
		AppGini.current_customer__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['customer'] : $filterer_customer); ?>"};
		AppGini.current_employee__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['employee'] : $filterer_employee); ?>"};
		AppGini.current_shipVia__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['shipVia'] : $filterer_shipVia); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(kind_reload__RAND__) == 'function') kind_reload__RAND__();
				if(typeof(company_reload__RAND__) == 'function') company_reload__RAND__();
				if(typeof(typeDoc_reload__RAND__) == 'function') typeDoc_reload__RAND__();
				if(typeof(customer_reload__RAND__) == 'function') customer_reload__RAND__();
				if(typeof(employee_reload__RAND__) == 'function') employee_reload__RAND__();
				if(typeof(shipVia_reload__RAND__) == 'function') shipVia_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function kind_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#kind-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_kind__RAND__.value, t: 'orders', f: 'kind' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="kind"]').val(resp.results[0].id);
							$j('[id=kind-container-readonly__RAND__]').html('<span id="kind-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


							if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'orders', f: 'kind' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_kind__RAND__.value = e.added.id;
				AppGini.current_kind__RAND__.text = e.added.text;
				$j('[name="kind"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


				if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
			});

			if(!$j("#kind-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_kind__RAND__.value, t: 'orders', f: 'kind' },
					success: function(resp){
						$j('[name="kind"]').val(resp.results[0].id);
						$j('[id=kind-container-readonly__RAND__]').html('<span id="kind-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

						if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_kind__RAND__.value, t: 'orders', f: 'kind' },
				success: function(resp){
					$j('[id=kind-container__RAND__], [id=kind-container-readonly__RAND__]').html('<span id="kind-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

					if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function company_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#company-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_company__RAND__.value, t: 'orders', f: 'company' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="company"]').val(resp.results[0].id);
							$j('[id=company-container-readonly__RAND__]').html('<span id="company-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


							if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'orders', f: 'company' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_company__RAND__.value = e.added.id;
				AppGini.current_company__RAND__.text = e.added.text;
				$j('[name="company"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


				if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
			});

			if(!$j("#company-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_company__RAND__.value, t: 'orders', f: 'company' },
					success: function(resp){
						$j('[name="company"]').val(resp.results[0].id);
						$j('[id=company-container-readonly__RAND__]').html('<span id="company-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

						if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_company__RAND__.value, t: 'orders', f: 'company' },
				success: function(resp){
					$j('[id=company-container__RAND__], [id=company-container-readonly__RAND__]').html('<span id="company-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

					if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function typeDoc_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#typeDoc-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_typeDoc__RAND__.value, t: 'orders', f: 'typeDoc' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="typeDoc"]').val(resp.results[0].id);
							$j('[id=typeDoc-container-readonly__RAND__]').html('<span id="typeDoc-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


							if(typeof(typeDoc_update_autofills__RAND__) == 'function') typeDoc_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'orders', f: 'typeDoc' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_typeDoc__RAND__.value = e.added.id;
				AppGini.current_typeDoc__RAND__.text = e.added.text;
				$j('[name="typeDoc"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


				if(typeof(typeDoc_update_autofills__RAND__) == 'function') typeDoc_update_autofills__RAND__();
			});

			if(!$j("#typeDoc-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_typeDoc__RAND__.value, t: 'orders', f: 'typeDoc' },
					success: function(resp){
						$j('[name="typeDoc"]').val(resp.results[0].id);
						$j('[id=typeDoc-container-readonly__RAND__]').html('<span id="typeDoc-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

						if(typeof(typeDoc_update_autofills__RAND__) == 'function') typeDoc_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_typeDoc__RAND__.value, t: 'orders', f: 'typeDoc' },
				success: function(resp){
					$j('[id=typeDoc-container__RAND__], [id=typeDoc-container-readonly__RAND__]').html('<span id="typeDoc-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

					if(typeof(typeDoc_update_autofills__RAND__) == 'function') typeDoc_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function customer_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#customer-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_customer__RAND__.value, t: 'orders', f: 'customer' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="customer"]').val(resp.results[0].id);
							$j('[id=customer-container-readonly__RAND__]').html('<span id="customer-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


							if(typeof(customer_update_autofills__RAND__) == 'function') customer_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'orders', f: 'customer' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_customer__RAND__.value = e.added.id;
				AppGini.current_customer__RAND__.text = e.added.text;
				$j('[name="customer"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


				if(typeof(customer_update_autofills__RAND__) == 'function') customer_update_autofills__RAND__();
			});

			if(!$j("#customer-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_customer__RAND__.value, t: 'orders', f: 'customer' },
					success: function(resp){
						$j('[name="customer"]').val(resp.results[0].id);
						$j('[id=customer-container-readonly__RAND__]').html('<span id="customer-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

						if(typeof(customer_update_autofills__RAND__) == 'function') customer_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_customer__RAND__.value, t: 'orders', f: 'customer' },
				success: function(resp){
					$j('[id=customer-container__RAND__], [id=customer-container-readonly__RAND__]').html('<span id="customer-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

					if(typeof(customer_update_autofills__RAND__) == 'function') customer_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function employee_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#employee-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_employee__RAND__.value, t: 'orders', f: 'employee' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="employee"]').val(resp.results[0].id);
							$j('[id=employee-container-readonly__RAND__]').html('<span id="employee-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=contacts_view_parent]').hide(); }else{ $j('.btn[id=contacts_view_parent]').show(); }


							if(typeof(employee_update_autofills__RAND__) == 'function') employee_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'orders', f: 'employee' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_employee__RAND__.value = e.added.id;
				AppGini.current_employee__RAND__.text = e.added.text;
				$j('[name="employee"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=contacts_view_parent]').hide(); }else{ $j('.btn[id=contacts_view_parent]').show(); }


				if(typeof(employee_update_autofills__RAND__) == 'function') employee_update_autofills__RAND__();
			});

			if(!$j("#employee-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_employee__RAND__.value, t: 'orders', f: 'employee' },
					success: function(resp){
						$j('[name="employee"]').val(resp.results[0].id);
						$j('[id=employee-container-readonly__RAND__]').html('<span id="employee-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=contacts_view_parent]').hide(); }else{ $j('.btn[id=contacts_view_parent]').show(); }

						if(typeof(employee_update_autofills__RAND__) == 'function') employee_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_employee__RAND__.value, t: 'orders', f: 'employee' },
				success: function(resp){
					$j('[id=employee-container__RAND__], [id=employee-container-readonly__RAND__]').html('<span id="employee-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=contacts_view_parent]').hide(); }else{ $j('.btn[id=contacts_view_parent]').show(); }

					if(typeof(employee_update_autofills__RAND__) == 'function') employee_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function shipVia_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#shipVia-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_shipVia__RAND__.value, t: 'orders', f: 'shipVia' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="shipVia"]').val(resp.results[0].id);
							$j('[id=shipVia-container-readonly__RAND__]').html('<span id="shipVia-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


							if(typeof(shipVia_update_autofills__RAND__) == 'function') shipVia_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'orders', f: 'shipVia' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_shipVia__RAND__.value = e.added.id;
				AppGini.current_shipVia__RAND__.text = e.added.text;
				$j('[name="shipVia"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


				if(typeof(shipVia_update_autofills__RAND__) == 'function') shipVia_update_autofills__RAND__();
			});

			if(!$j("#shipVia-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_shipVia__RAND__.value, t: 'orders', f: 'shipVia' },
					success: function(resp){
						$j('[name="shipVia"]').val(resp.results[0].id);
						$j('[id=shipVia-container-readonly__RAND__]').html('<span id="shipVia-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

						if(typeof(shipVia_update_autofills__RAND__) == 'function') shipVia_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_shipVia__RAND__.value, t: 'orders', f: 'shipVia' },
				success: function(resp){
					$j('[id=shipVia-container__RAND__], [id=shipVia-container-readonly__RAND__]').html('<span id="shipVia-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

					if(typeof(shipVia_update_autofills__RAND__) == 'function') shipVia_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/orders_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/orders_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Dettaglio ordini', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return orders_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return orders_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return orders_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#kind').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#kind_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#company').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#company_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#typeDoc').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#typeDoc_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#multiOrder').replaceWith('<div class=\"form-control-static\" id=\"multiOrder\">' + (jQuery('#multiOrder').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#customer').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#customer_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#dateDay, #dateMonth, #dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#shippedDate').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#shippedDateDay, #shippedDateMonth, #shippedDateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#shipVia').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#shipVia_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#Freight').replaceWith('<div class=\"form-control-static\" id=\"Freight\">' + (jQuery('#Freight').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#pallets').replaceWith('<div class=\"form-control-static\" id=\"pallets\">' + (jQuery('#pallets').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#licencePlate').replaceWith('<div class=\"form-control-static\" id=\"licencePlate\">' + (jQuery('#licencePlate').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#orderTotal').replaceWith('<div class=\"form-control-static\" id=\"orderTotal\">' + (jQuery('#orderTotal').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cashCredit').prop('disabled', true);\n";
		$jsReadOnly .= "\tjQuery('#trust').replaceWith('<div class=\"form-control-static\" id=\"trust\">' + (jQuery('#trust').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#overdraft').replaceWith('<div class=\"form-control-static\" id=\"overdraft\">' + (jQuery('#overdraft').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#commisionFee').replaceWith('<div class=\"form-control-static\" id=\"commisionFee\">' + (jQuery('#commisionFee').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#consigneeHour').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"consigneeHour\">' + (jQuery('#consigneeHour').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#consigneePlace').replaceWith('<div class=\"form-control-static\" id=\"consigneePlace\">' + (jQuery('#consigneePlace').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#related').replaceWith('<div class=\"form-control-static\" id=\"related\">' + (jQuery('#related').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$jsEditable .= "\tjQuery('#consigneeHour').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') });";
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(kind)%%>', $combo_kind->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(kind)%%>', $combo_kind->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(kind)%%>', urlencode($combo_kind->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(consigneeID)%%>', $combo_consigneeID->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(consigneeID)%%>', $combo_consigneeID->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(company)%%>', $combo_company->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(company)%%>', $combo_company->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(company)%%>', urlencode($combo_company->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(typeDoc)%%>', $combo_typeDoc->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(typeDoc)%%>', $combo_typeDoc->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(typeDoc)%%>', urlencode($combo_typeDoc->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(customer)%%>', $combo_customer->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(customer)%%>', $combo_customer->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(customer)%%>', urlencode($combo_customer->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(employee)%%>', $combo_employee->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(employee)%%>', $combo_employee->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(employee)%%>', urlencode($combo_employee->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_date->GetHTML(true) . '</div>' : $combo_date->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(date)%%>', $combo_date->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(requiredDate)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_requiredDate->GetHTML(true) . '</div>' : $combo_requiredDate->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(requiredDate)%%>', $combo_requiredDate->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(shippedDate)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_shippedDate->GetHTML(true) . '</div>' : $combo_shippedDate->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(shippedDate)%%>', $combo_shippedDate->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(shipVia)%%>', $combo_shipVia->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(shipVia)%%>', $combo_shipVia->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(shipVia)%%>', urlencode($combo_shipVia->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'kind' => array('kinds', 'Kind Order'), 'company' => array('companies', 'ID Azienda'), 'typeDoc' => array('kinds', 'Tipo documento'), 'customer' => array('companies', 'Cliente'), 'employee' => array('contacts', 'Impiegato'), 'shipVia' => array('companies', 'Spedizione a mezzo'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(kind)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(progressiveNr)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(trasmissionFor)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(consigneeID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(company)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(typeDoc)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(multiOrder)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(customer)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(employee)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(date)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(requiredDate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(shippedDate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(shipVia)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Freight)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(pallets)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(licencePlate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(orderTotal)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cashCredit)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(trust)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(overdraft)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(commisionFee)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(consigneeHour)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(consigneePlace)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(related)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(kind)%%>', safe_html($urow['kind']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(kind)%%>', html_attr($row['kind']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(kind)%%>', urlencode($urow['kind']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(progressiveNr)%%>', safe_html($urow['progressiveNr']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(progressiveNr)%%>', html_attr($row['progressiveNr']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(progressiveNr)%%>', urlencode($urow['progressiveNr']), $templateCode);
		$templateCode = str_replace('<%%VALUE(trasmissionFor)%%>', safe_html($urow['trasmissionFor']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trasmissionFor)%%>', urlencode($urow['trasmissionFor']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(consigneeID)%%>', safe_html($urow['consigneeID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(consigneeID)%%>', html_attr($row['consigneeID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(consigneeID)%%>', urlencode($urow['consigneeID']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(company)%%>', safe_html($urow['company']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(company)%%>', html_attr($row['company']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(company)%%>', urlencode($urow['company']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(typeDoc)%%>', safe_html($urow['typeDoc']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(typeDoc)%%>', html_attr($row['typeDoc']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(typeDoc)%%>', urlencode($urow['typeDoc']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(multiOrder)%%>', safe_html($urow['multiOrder']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(multiOrder)%%>', html_attr($row['multiOrder']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(multiOrder)%%>', urlencode($urow['multiOrder']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(customer)%%>', safe_html($urow['customer']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(customer)%%>', html_attr($row['customer']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(customer)%%>', urlencode($urow['customer']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(employee)%%>', safe_html($urow['employee']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(employee)%%>', html_attr($row['employee']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(employee)%%>', urlencode($urow['employee']), $templateCode);
		$templateCode = str_replace('<%%VALUE(date)%%>', @date('d/m/Y', @strtotime(html_attr($row['date']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['date'])))), $templateCode);
		$templateCode = str_replace('<%%VALUE(requiredDate)%%>', @date('d/m/Y', @strtotime(html_attr($row['requiredDate']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(requiredDate)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['requiredDate'])))), $templateCode);
		$templateCode = str_replace('<%%VALUE(shippedDate)%%>', @date('d/m/Y', @strtotime(html_attr($row['shippedDate']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(shippedDate)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['shippedDate'])))), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(shipVia)%%>', safe_html($urow['shipVia']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(shipVia)%%>', html_attr($row['shipVia']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(shipVia)%%>', urlencode($urow['shipVia']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Freight)%%>', safe_html($urow['Freight']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Freight)%%>', html_attr($row['Freight']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Freight)%%>', urlencode($urow['Freight']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(pallets)%%>', safe_html($urow['pallets']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(pallets)%%>', html_attr($row['pallets']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pallets)%%>', urlencode($urow['pallets']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(licencePlate)%%>', safe_html($urow['licencePlate']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(licencePlate)%%>', html_attr($row['licencePlate']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(licencePlate)%%>', urlencode($urow['licencePlate']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(orderTotal)%%>', safe_html($urow['orderTotal']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(orderTotal)%%>', html_attr($row['orderTotal']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(orderTotal)%%>', urlencode($urow['orderTotal']), $templateCode);
		$templateCode = str_replace('<%%CHECKED(cashCredit)%%>', ($row['cashCredit'] ? "checked" : ""), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(trust)%%>', safe_html($urow['trust']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(trust)%%>', html_attr($row['trust']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trust)%%>', urlencode($urow['trust']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(overdraft)%%>', safe_html($urow['overdraft']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(overdraft)%%>', html_attr($row['overdraft']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(overdraft)%%>', urlencode($urow['overdraft']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(commisionFee)%%>', safe_html($urow['commisionFee']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(commisionFee)%%>', html_attr($row['commisionFee']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(commisionFee)%%>', urlencode($urow['commisionFee']), $templateCode);
		$templateCode = str_replace('<%%VALUE(consigneeHour)%%>', app_datetime($row['consigneeHour'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(consigneeHour)%%>', urlencode(app_datetime($urow['consigneeHour'], 'dt')), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(consigneePlace)%%>', safe_html($urow['consigneePlace']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(consigneePlace)%%>', html_attr($row['consigneePlace']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(consigneePlace)%%>', urlencode($urow['consigneePlace']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(related)%%>', safe_html($urow['related']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(related)%%>', html_attr($row['related']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(related)%%>', urlencode($urow['related']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(kind)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(kind)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(progressiveNr)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(progressiveNr)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(trasmissionFor)%%>', 'SDI10', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trasmissionFor)%%>', urlencode('SDI10'), $templateCode);
		$templateCode = str_replace('<%%VALUE(consigneeID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(consigneeID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(company)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(company)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(typeDoc)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(typeDoc)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(multiOrder)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(multiOrder)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(customer)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(customer)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(employee)%%>', ( $_REQUEST['FilterField'][1]=='10' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_employee->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(employee)%%>', urlencode( $_REQUEST['FilterField'][1]=='10' && $_REQUEST['FilterOperator'][1]=='<=>' ? $combo_employee->SelectedData : ''), $templateCode);
		$templateCode = str_replace('<%%VALUE(date)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(date)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(requiredDate)%%>', '<%%creationDate%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(requiredDate)%%>', urlencode('<%%creationDate%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(shippedDate)%%>', '<%%creationDate%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(shippedDate)%%>', urlencode('<%%creationDate%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(shipVia)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(shipVia)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Freight)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Freight)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(pallets)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pallets)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(licencePlate)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(licencePlate)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(orderTotal)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(orderTotal)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%CHECKED(cashCredit)%%>', 'checked', $templateCode);
		$templateCode = str_replace('<%%VALUE(trust)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(trust)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(overdraft)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(overdraft)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(commisionFee)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(commisionFee)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(consigneeHour)%%>', '<%%creationTime%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(consigneeHour)%%>', urlencode('<%%creationTime%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(consigneePlace)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(consigneePlace)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(related)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(related)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('orders');
	if($selected_id){
		$jdata = get_joined_record('orders', $selected_id);
		if($jdata === false) $jdata = get_defaults('orders');
		$rdata = $row;
	}
	$templateCode .= loadView('orders-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: orders_dv
	if(function_exists('orders_dv')){
		$args=array();
		orders_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>