<?php

// Data functions (insert, update, delete, form) for table firstCashNote

// This script and data application were generated by AppGini 5.74
// Download AppGini for free from https://bigprof.com/appgini/download/

function firstCashNote_insert($data=[]){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('firstCashNote');
	if(!$arrPerm[1]){
		return false;
	}

	if (!$data){
            $data = $_REQUEST;
        }
        $data = firstCashNote_dataRequest($data);
        
	// hook: firstCashNote_before_insert
        if(!function_exists('firstCashNote_before_update')){
            include 'hooks/firstCashNote.php';
        }
	if(function_exists('firstCashNote_before_insert')){
		$args=array();
		if(!firstCashNote_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `firstCashNote` set       `kind`=' . (($data['kind'] !== '' && $data['kind'] !== NULL) ? "'{$data['kind']}'" : 'NULL') . ', `order`=' . (($data['order'] !== '' && $data['order'] !== NULL) ? "'{$data['order']}'" : 'NULL') . ', `operationDate`=' . (($data['operationDate'] !== '' && $data['operationDate'] !== NULL) ? "'{$data['operationDate']}'" : 'NULL') . ', `company`=' . (($data['company'] !== '' && $data['company'] !== NULL) ? "'{$data['company']}'" : 'NULL') . ', `customer`=' . (($data['customer'] !== '' && $data['customer'] !== NULL) ? "'{$data['customer']}'" : 'NULL') . ', `documentNumber`=' . (($data['documentNumber'] !== '' && $data['documentNumber'] !== NULL) ? "'{$data['documentNumber']}'" : 'NULL') . ', `causal`=' . (($data['causal'] !== '' && $data['causal'] !== NULL) ? "'{$data['causal']}'" : 'NULL') . ', `revenue`=' . (($data['revenue'] !== '' && $data['revenue'] !== NULL) ? "'{$data['revenue']}'" : 'NULL') . ', `outputs`=' . (($data['outputs'] !== '' && $data['outputs'] !== NULL) ? "'{$data['outputs']}'" : 'NULL') . ', `balance`=' . (($data['balance'] !== '' && $data['balance'] !== NULL) ? "'{$data['balance']}'" : 'NULL') . ', `idBank`=' . (($data['idBank'] !== '' && $data['idBank'] !== NULL) ? "'{$data['idBank']}'" : 'NULL') . ', `bank`=' . (($data['bank'] !== '' && $data['bank'] !== NULL) ? "'{$data['bank']}'" : 'NULL') . ', `note`=' . (($data['note'] !== '' && $data['note'] !== NULL) ? "'{$data['note']}'" : 'NULL') . ', `paymentDeadLine`=' . (($data['paymentDeadLine'] !== '' && $data['paymentDeadLine'] !== NULL) ? "'{$data['paymentDeadLine']}'" : 'NULL') . ', `payed`=' . (($data['payed'] !== '' && $data['payed'] !== NULL) ? "'{$data['payed']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"firstCashNote_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: firstCashNote_after_insert
	if(function_exists('firstCashNote_after_insert')){
		$res = sql("select * from `firstCashNote` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!firstCashNote_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('firstCashNote', $recID, getLoggedMemberID());

	return $recID;
}

function firstCashNote_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('firstCashNote');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='firstCashNote' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='firstCashNote' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: firstCashNote_before_delete
        if(!function_exists('firstCashNote_before_update')){
            include 'hooks/firstCashNote.php';
        }
	if(function_exists('firstCashNote_before_delete')){
		$args=array();
		if(!firstCashNote_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `firstCashNote` where `id`='$selected_id'", $eo);

	// hook: firstCashNote_after_delete
	if(function_exists('firstCashNote_after_delete')){
		$args=array();
		firstCashNote_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='firstCashNote' and pkValue='$selected_id'", $eo);
}

function firstCashNote_update($selected_id, $data=[]){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('firstCashNote');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='firstCashNote' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='firstCashNote' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}
        
        if (!$data){
            $data = $_REQUEST;
        }
        
        $data = firstCashNote_dataRequest($data);
        
        $data['selectedID']=makeSafe($selected_id);
            
	// hook: firstCashNote_before_update
	if(!function_exists('firstCashNote_before_update')){
            include 'hooks/firstCashNote.php';
        }
	if(function_exists('firstCashNote_before_update')){
		$args=array();
		if(!firstCashNote_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `firstCashNote` set       `kind`=' . (($data['kind'] !== '' && $data['kind'] !== NULL) ? "'{$data['kind']}'" : 'NULL') . ', `order`=' . (($data['order'] !== '' && $data['order'] !== NULL) ? "'{$data['order']}'" : 'NULL') . ', `operationDate`=' . (($data['operationDate'] !== '' && $data['operationDate'] !== NULL) ? "'{$data['operationDate']}'" : 'NULL') . ', `company`=' . (($data['company'] !== '' && $data['company'] !== NULL) ? "'{$data['company']}'" : 'NULL') . ', `customer`=' . (($data['customer'] !== '' && $data['customer'] !== NULL) ? "'{$data['customer']}'" : 'NULL') . ', `documentNumber`=' . (($data['documentNumber'] !== '' && $data['documentNumber'] !== NULL) ? "'{$data['documentNumber']}'" : 'NULL') . ', `causal`=' . (($data['causal'] !== '' && $data['causal'] !== NULL) ? "'{$data['causal']}'" : 'NULL') . ', `revenue`=' . (($data['revenue'] !== '' && $data['revenue'] !== NULL) ? "'{$data['revenue']}'" : 'NULL') . ', `outputs`=' . (($data['outputs'] !== '' && $data['outputs'] !== NULL) ? "'{$data['outputs']}'" : 'NULL') . ', `balance`=' . (($data['balance'] !== '' && $data['balance'] !== NULL) ? "'{$data['balance']}'" : 'NULL') . ', `idBank`=' . (($data['idBank'] !== '' && $data['idBank'] !== NULL) ? "'{$data['idBank']}'" : 'NULL') . ', `bank`=' . (($data['bank'] !== '' && $data['bank'] !== NULL) ? "'{$data['bank']}'" : 'NULL') . ', `note`=' . (($data['note'] !== '' && $data['note'] !== NULL) ? "'{$data['note']}'" : 'NULL') . ', `paymentDeadLine`=' . (($data['paymentDeadLine'] !== '' && $data['paymentDeadLine'] !== NULL) ? "'{$data['paymentDeadLine']}'" : 'NULL') . ', `payed`=' . (($data['payed'] !== '' && $data['payed'] !== NULL) ? "'{$data['payed']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="firstCashNote_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: firstCashNote_after_update
	if(function_exists('firstCashNote_after_update')){
		$res = sql("SELECT * FROM `firstCashNote` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!firstCashNote_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='firstCashNote' and pkValue='".makeSafe($selected_id)."'", $eo);

}
function firstCashNote_dataRequest($request=false){
    
        if (!$request){
            $request=$_REQUEST;
        }
        $data['kind'] = makeSafe($request['kind']);
		if($data['kind'] == empty_lookup_value){ $data['kind'] = ''; }
	$data['order'] = makeSafe($request['order']);
		if($data['order'] == empty_lookup_value){ $data['order'] = ''; }
	$data['operationDate'] = intval($request['operationDateYear']) . '-' . intval($request['operationDateMonth']) . '-' . intval($request['operationDateDay']);
	$data['operationDate'] = parseMySQLDate($data['operationDate'], '<%%creationDate%%>');
	$data['company'] = makeSafe($request['company']);
		if($data['company'] == empty_lookup_value){ $data['company'] = ''; }
	$data['customer'] = makeSafe($request['customer']);
		if($data['customer'] == empty_lookup_value){ $data['customer'] = ''; }
	$data['documentNumber'] = makeSafe($request['documentNumber']);
		if($data['documentNumber'] == empty_lookup_value){ $data['documentNumber'] = ''; }
	$data['causal'] = br2nl(makeSafe($request['causal']));
	$data['revenue'] = makeSafe($request['revenue']);
		if($data['revenue'] == empty_lookup_value){ $data['revenue'] = ''; }
	$data['outputs'] = makeSafe($request['outputs']);
		if($data['outputs'] == empty_lookup_value){ $data['outputs'] = ''; }
	$data['balance'] = makeSafe($request['balance']);
		if($data['balance'] == empty_lookup_value){ $data['balance'] = ''; }
	$data['idBank'] = makeSafe($request['idBank']);
		if($data['idBank'] == empty_lookup_value){ $data['idBank'] = ''; }
	$data['bank'] = makeSafe($request['company']);
		if($data['bank'] == empty_lookup_value){ $data['bank'] = ''; }
	$data['note'] = br2nl(makeSafe($request['note']));
	$data['paymentDeadLine'] = intval($request['paymentDeadLineYear']) . '-' . intval($request['paymentDeadLineMonth']) . '-' . intval($request['paymentDeadLineDay']);
	$data['paymentDeadLine'] = parseMySQLDate($data['paymentDeadLine'], '<%%creationDate%%>');
	$data['payed'] = makeSafe($request['payed']);
		if($data['payed'] == empty_lookup_value){ $data['payed'] = ''; }
        return $data;
}

function firstCashNote_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('firstCashNote');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_kind = thisOr(undo_magic_quotes($_REQUEST['filterer_kind']), '');
	$filterer_order = thisOr(undo_magic_quotes($_REQUEST['filterer_order']), '');
	$filterer_company = thisOr(undo_magic_quotes($_REQUEST['filterer_company']), '');
	$filterer_customer = thisOr(undo_magic_quotes($_REQUEST['filterer_customer']), '');
	$filterer_idBank = thisOr(undo_magic_quotes($_REQUEST['filterer_idBank']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: kind
	$combo_kind = new DataCombo;
	// combobox: order
	$combo_order = new DataCombo;
	// combobox: operationDate
	$combo_operationDate = new DateCombo;
	$combo_operationDate->DateFormat = "dmy";
	$combo_operationDate->MinYear = 1900;
	$combo_operationDate->MaxYear = 2100;
	$combo_operationDate->DefaultDate = parseMySQLDate('<%%creationDate%%>', '<%%creationDate%%>');
	$combo_operationDate->MonthNames = $Translation['month names'];
	$combo_operationDate->NamePrefix = 'operationDate';
	// combobox: company
	$combo_company = new DataCombo;
	// combobox: customer
	$combo_customer = new DataCombo;
	// combobox: idBank
	$combo_idBank = new DataCombo;
	// combobox: paymentDeadLine
	$combo_paymentDeadLine = new DateCombo;
	$combo_paymentDeadLine->DateFormat = "dmy";
	$combo_paymentDeadLine->MinYear = 1900;
	$combo_paymentDeadLine->MaxYear = 2100;
	$combo_paymentDeadLine->DefaultDate = parseMySQLDate('<%%creationDate%%>', '<%%creationDate%%>');
	$combo_paymentDeadLine->MonthNames = $Translation['month names'];
	$combo_paymentDeadLine->NamePrefix = 'paymentDeadLine';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='firstCashNote' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='firstCashNote' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `firstCashNote` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'firstCashNote_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_kind->SelectedData = $row['kind'];
		$combo_order->SelectedData = $row['order'];
		$combo_operationDate->DefaultDate = $row['operationDate'];
		$combo_company->SelectedData = $row['company'];
		$combo_customer->SelectedData = $row['customer'];
		$combo_idBank->SelectedData = $row['idBank'];
		$combo_paymentDeadLine->DefaultDate = $row['paymentDeadLine'];
	}else{
		$combo_kind->SelectedData = $filterer_kind;
		$combo_order->SelectedData = $filterer_order;
		$combo_company->SelectedData = $filterer_company;
		$combo_customer->SelectedData = $filterer_customer;
		$combo_idBank->SelectedData = $filterer_idBank;
	}
	$combo_kind->HTML = '<span id="kind-container' . $rnd1 . '"></span><input type="hidden" name="kind" id="kind' . $rnd1 . '" value="' . html_attr($combo_kind->SelectedData) . '">';
	$combo_kind->MatchText = '<span id="kind-container-readonly' . $rnd1 . '"></span><input type="hidden" name="kind" id="kind' . $rnd1 . '" value="' . html_attr($combo_kind->SelectedData) . '">';
	$combo_order->HTML = '<span id="order-container' . $rnd1 . '"></span><input type="hidden" name="order" id="order' . $rnd1 . '" value="' . html_attr($combo_order->SelectedData) . '">';
	$combo_order->MatchText = '<span id="order-container-readonly' . $rnd1 . '"></span><input type="hidden" name="order" id="order' . $rnd1 . '" value="' . html_attr($combo_order->SelectedData) . '">';
	$combo_company->HTML = '<span id="company-container' . $rnd1 . '"></span><input type="hidden" name="company" id="company' . $rnd1 . '" value="' . html_attr($combo_company->SelectedData) . '">';
	$combo_company->MatchText = '<span id="company-container-readonly' . $rnd1 . '"></span><input type="hidden" name="company" id="company' . $rnd1 . '" value="' . html_attr($combo_company->SelectedData) . '">';
	$combo_customer->HTML = '<span id="customer-container' . $rnd1 . '"></span><input type="hidden" name="customer" id="customer' . $rnd1 . '" value="' . html_attr($combo_customer->SelectedData) . '">';
	$combo_customer->MatchText = '<span id="customer-container-readonly' . $rnd1 . '"></span><input type="hidden" name="customer" id="customer' . $rnd1 . '" value="' . html_attr($combo_customer->SelectedData) . '">';
	$combo_idBank->HTML = '<span id="idBank-container' . $rnd1 . '"></span><input type="hidden" name="idBank" id="idBank' . $rnd1 . '" value="' . html_attr($combo_idBank->SelectedData) . '">';
	$combo_idBank->MatchText = '<span id="idBank-container-readonly' . $rnd1 . '"></span><input type="hidden" name="idBank" id="idBank' . $rnd1 . '" value="' . html_attr($combo_idBank->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_kind__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['kind'] : $filterer_kind); ?>"};
		AppGini.current_order__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['order'] : $filterer_order); ?>"};
		AppGini.current_company__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['company'] : $filterer_company); ?>"};
		AppGini.current_customer__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['customer'] : $filterer_customer); ?>"};
		AppGini.current_idBank__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['idBank'] : $filterer_idBank); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(kind_reload__RAND__) == 'function') kind_reload__RAND__();
				if(typeof(order_reload__RAND__) == 'function') order_reload__RAND__();
				if(typeof(company_reload__RAND__) == 'function') company_reload__RAND__();
				if(typeof(customer_reload__RAND__) == 'function') customer_reload__RAND__();
				if(typeof(idBank_reload__RAND__) == 'function') idBank_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function kind_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#kind-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_kind__RAND__.value, t: 'firstCashNote', f: 'kind' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="kind"]').val(resp.results[0].id);
							$j('[id=kind-container-readonly__RAND__]').html('<span id="kind-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


							if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'firstCashNote', f: 'kind' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_kind__RAND__.value = e.added.id;
				AppGini.current_kind__RAND__.text = e.added.text;
				$j('[name="kind"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }


				if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
			});

			if(!$j("#kind-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_kind__RAND__.value, t: 'firstCashNote', f: 'kind' },
					success: function(resp){
						$j('[name="kind"]').val(resp.results[0].id);
						$j('[id=kind-container-readonly__RAND__]').html('<span id="kind-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

						if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_kind__RAND__.value, t: 'firstCashNote', f: 'kind' },
				success: function(resp){
					$j('[id=kind-container__RAND__], [id=kind-container-readonly__RAND__]').html('<span id="kind-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=kinds_view_parent]').hide(); }else{ $j('.btn[id=kinds_view_parent]').show(); }

					if(typeof(kind_update_autofills__RAND__) == 'function') kind_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function order_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#order-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_order__RAND__.value, t: 'firstCashNote', f: 'order' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="order"]').val(resp.results[0].id);
							$j('[id=order-container-readonly__RAND__]').html('<span id="order-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=orders_view_parent]').hide(); }else{ $j('.btn[id=orders_view_parent]').show(); }


							if(typeof(order_update_autofills__RAND__) == 'function') order_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'firstCashNote', f: 'order' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_order__RAND__.value = e.added.id;
				AppGini.current_order__RAND__.text = e.added.text;
				$j('[name="order"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=orders_view_parent]').hide(); }else{ $j('.btn[id=orders_view_parent]').show(); }


				if(typeof(order_update_autofills__RAND__) == 'function') order_update_autofills__RAND__();
			});

			if(!$j("#order-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_order__RAND__.value, t: 'firstCashNote', f: 'order' },
					success: function(resp){
						$j('[name="order"]').val(resp.results[0].id);
						$j('[id=order-container-readonly__RAND__]').html('<span id="order-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=orders_view_parent]').hide(); }else{ $j('.btn[id=orders_view_parent]').show(); }

						if(typeof(order_update_autofills__RAND__) == 'function') order_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_order__RAND__.value, t: 'firstCashNote', f: 'order' },
				success: function(resp){
					$j('[id=order-container__RAND__], [id=order-container-readonly__RAND__]').html('<span id="order-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=orders_view_parent]').hide(); }else{ $j('.btn[id=orders_view_parent]').show(); }

					if(typeof(order_update_autofills__RAND__) == 'function') order_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function company_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#company-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_company__RAND__.value, t: 'firstCashNote', f: 'company' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="company"]').val(resp.results[0].id);
							$j('[id=company-container-readonly__RAND__]').html('<span id="company-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


							if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'firstCashNote', f: 'company' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_company__RAND__.value = e.added.id;
				AppGini.current_company__RAND__.text = e.added.text;
				$j('[name="company"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


				if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
			});

			if(!$j("#company-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_company__RAND__.value, t: 'firstCashNote', f: 'company' },
					success: function(resp){
						$j('[name="company"]').val(resp.results[0].id);
						$j('[id=company-container-readonly__RAND__]').html('<span id="company-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

						if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_company__RAND__.value, t: 'firstCashNote', f: 'company' },
				success: function(resp){
					$j('[id=company-container__RAND__], [id=company-container-readonly__RAND__]').html('<span id="company-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

					if(typeof(company_update_autofills__RAND__) == 'function') company_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function customer_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#customer-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_customer__RAND__.value, t: 'firstCashNote', f: 'customer' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="customer"]').val(resp.results[0].id);
							$j('[id=customer-container-readonly__RAND__]').html('<span id="customer-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


							if(typeof(customer_update_autofills__RAND__) == 'function') customer_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'firstCashNote', f: 'customer' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_customer__RAND__.value = e.added.id;
				AppGini.current_customer__RAND__.text = e.added.text;
				$j('[name="customer"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


				if(typeof(customer_update_autofills__RAND__) == 'function') customer_update_autofills__RAND__();
			});

			if(!$j("#customer-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_customer__RAND__.value, t: 'firstCashNote', f: 'customer' },
					success: function(resp){
						$j('[name="customer"]').val(resp.results[0].id);
						$j('[id=customer-container-readonly__RAND__]').html('<span id="customer-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

						if(typeof(customer_update_autofills__RAND__) == 'function') customer_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_customer__RAND__.value, t: 'firstCashNote', f: 'customer' },
				success: function(resp){
					$j('[id=customer-container__RAND__], [id=customer-container-readonly__RAND__]').html('<span id="customer-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

					if(typeof(customer_update_autofills__RAND__) == 'function') customer_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function idBank_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#idBank-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_idBank__RAND__.value, t: 'firstCashNote', f: 'idBank' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="idBank"]').val(resp.results[0].id);
							$j('[id=idBank-container-readonly__RAND__]').html('<span id="idBank-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


							if(typeof(idBank_update_autofills__RAND__) == 'function') idBank_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'firstCashNote', f: 'idBank' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_idBank__RAND__.value = e.added.id;
				AppGini.current_idBank__RAND__.text = e.added.text;
				$j('[name="idBank"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }


				if(typeof(idBank_update_autofills__RAND__) == 'function') idBank_update_autofills__RAND__();
			});

			if(!$j("#idBank-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_idBank__RAND__.value, t: 'firstCashNote', f: 'idBank' },
					success: function(resp){
						$j('[name="idBank"]').val(resp.results[0].id);
						$j('[id=idBank-container-readonly__RAND__]').html('<span id="idBank-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

						if(typeof(idBank_update_autofills__RAND__) == 'function') idBank_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_idBank__RAND__.value, t: 'firstCashNote', f: 'idBank' },
				success: function(resp){
					$j('[id=idBank-container__RAND__], [id=idBank-container-readonly__RAND__]').html('<span id="idBank-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=companies_view_parent]').hide(); }else{ $j('.btn[id=companies_view_parent]').show(); }

					if(typeof(idBank_update_autofills__RAND__) == 'function') idBank_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/firstCashNote_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/firstCashNote_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'FirstCashNote details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return firstCashNote_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return firstCashNote_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return firstCashNote_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#kind').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#kind_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#order').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#order_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#operationDate').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#operationDateDay, #operationDateMonth, #operationDateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#company').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#company_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#customer').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#customer_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#documentNumber').replaceWith('<div class=\"form-control-static\" id=\"documentNumber\">' + (jQuery('#documentNumber').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#causal').replaceWith('<div class=\"form-control-static\" id=\"causal\">' + (jQuery('#causal').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#revenue').replaceWith('<div class=\"form-control-static\" id=\"revenue\">' + (jQuery('#revenue').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#outputs').replaceWith('<div class=\"form-control-static\" id=\"outputs\">' + (jQuery('#outputs').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#balance').replaceWith('<div class=\"form-control-static\" id=\"balance\">' + (jQuery('#balance').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#idBank').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#idBank_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#note').replaceWith('<div class=\"form-control-static\" id=\"note\">' + (jQuery('#note').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#paymentDeadLine').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#paymentDeadLineDay, #paymentDeadLineMonth, #paymentDeadLineYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#payed').prop('disabled', true);\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(kind)%%>', $combo_kind->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(kind)%%>', $combo_kind->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(kind)%%>', urlencode($combo_kind->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(order)%%>', $combo_order->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(order)%%>', $combo_order->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(order)%%>', urlencode($combo_order->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(operationDate)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_operationDate->GetHTML(true) . '</div>' : $combo_operationDate->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(operationDate)%%>', $combo_operationDate->GetHTML(true), $templateCode);
	$templateCode = str_replace('<%%COMBO(company)%%>', $combo_company->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(company)%%>', $combo_company->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(company)%%>', urlencode($combo_company->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(customer)%%>', $combo_customer->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(customer)%%>', $combo_customer->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(customer)%%>', urlencode($combo_customer->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(idBank)%%>', $combo_idBank->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(idBank)%%>', $combo_idBank->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(idBank)%%>', urlencode($combo_idBank->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(paymentDeadLine)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_paymentDeadLine->GetHTML(true) . '</div>' : $combo_paymentDeadLine->GetHTML()), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(paymentDeadLine)%%>', $combo_paymentDeadLine->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'kind' => array('kinds', 'Kind'), 'order' => array('orders', 'Order'), 'company' => array('companies', 'Company'), 'customer' => array('companies', 'Customer'), 'idBank' => array('companies', 'IdBank'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(kind)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(order)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(operationDate)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(company)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(customer)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(documentNumber)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(causal)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(revenue)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(outputs)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(balance)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(idBank)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(note)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(paymentDeadLine)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(payed)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(kind)%%>', safe_html($urow['kind']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(kind)%%>', html_attr($row['kind']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(kind)%%>', urlencode($urow['kind']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(order)%%>', safe_html($urow['order']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(order)%%>', html_attr($row['order']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(order)%%>', urlencode($urow['order']), $templateCode);
		$templateCode = str_replace('<%%VALUE(operationDate)%%>', @date('d/m/Y', @strtotime(html_attr($row['operationDate']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(operationDate)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['operationDate'])))), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(company)%%>', safe_html($urow['company']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(company)%%>', html_attr($row['company']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(company)%%>', urlencode($urow['company']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(customer)%%>', safe_html($urow['customer']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(customer)%%>', html_attr($row['customer']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(customer)%%>', urlencode($urow['customer']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(documentNumber)%%>', safe_html($urow['documentNumber']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(documentNumber)%%>', html_attr($row['documentNumber']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(documentNumber)%%>', urlencode($urow['documentNumber']), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)){
			$templateCode = str_replace('<%%VALUE(causal)%%>', safe_html($urow['causal']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(causal)%%>', html_attr($row['causal']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(causal)%%>', urlencode($urow['causal']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(revenue)%%>', safe_html($urow['revenue']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(revenue)%%>', html_attr($row['revenue']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(revenue)%%>', urlencode($urow['revenue']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(outputs)%%>', safe_html($urow['outputs']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(outputs)%%>', html_attr($row['outputs']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(outputs)%%>', urlencode($urow['outputs']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(balance)%%>', safe_html($urow['balance']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(balance)%%>', html_attr($row['balance']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(balance)%%>', urlencode($urow['balance']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(idBank)%%>', safe_html($urow['idBank']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(idBank)%%>', html_attr($row['idBank']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(idBank)%%>', urlencode($urow['idBank']), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)){
			$templateCode = str_replace('<%%VALUE(note)%%>', safe_html($urow['note']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(note)%%>', html_attr($row['note']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(note)%%>', urlencode($urow['note']), $templateCode);
		$templateCode = str_replace('<%%VALUE(paymentDeadLine)%%>', @date('d/m/Y', @strtotime(html_attr($row['paymentDeadLine']))), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(paymentDeadLine)%%>', urlencode(@date('d/m/Y', @strtotime(html_attr($urow['paymentDeadLine'])))), $templateCode);
		$templateCode = str_replace('<%%CHECKED(payed)%%>', ($row['payed'] ? "checked" : ""), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(kind)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(kind)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(order)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(order)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(operationDate)%%>', '<%%creationDate%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(operationDate)%%>', urlencode('<%%creationDate%%>'), $templateCode);
		$templateCode = str_replace('<%%VALUE(company)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(company)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(customer)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(customer)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(documentNumber)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(documentNumber)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(causal)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(causal)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(revenue)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(revenue)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(outputs)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(outputs)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(balance)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(balance)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(idBank)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(idBank)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(note)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(note)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(paymentDeadLine)%%>', '<%%creationDate%%>', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(paymentDeadLine)%%>', urlencode('<%%creationDate%%>'), $templateCode);
		$templateCode = str_replace('<%%CHECKED(payed)%%>', '', $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tcompany_update_autofills$rnd1 = function(){\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint){
		$templateCode .= "\t\t\turl: 'firstCashNote_autofill.php?rnd1=$rnd1&mfk=company&id=' + encodeURIComponent('".addslashes($row['company'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET'\n";
	}else{
		$templateCode .= "\t\t\turl: 'firstCashNote_autofill.php?rnd1=$rnd1&mfk=company&id=' + encodeURIComponent(AppGini.current_company{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "', type: 'GET', beforeSend: function(){ /* */ \$j('#company$rnd1').prop('disabled', true); \$j('#companyLoading').html('<img src=loading.gif align=top>'); }, complete: function(){".(($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#company$rnd1').prop('disabled', false); " : "\$j('#company$rnd1').prop('disabled', true); ")."\$j('#companyLoading').html('');}\n";
	}
	$templateCode.="\t\t});\n";
	$templateCode.="\t};\n";
	if(!$dvprint) $templateCode.="\tif(\$j('#company_caption').length) \$j('#company_caption').click(function(){ /* */ company_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('firstCashNote');
	if($selected_id){
		$jdata = get_joined_record('firstCashNote', $selected_id);
		if($jdata === false) $jdata = get_defaults('firstCashNote');
		$rdata = $row;
	}
	$templateCode .= loadView('firstCashNote-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: firstCashNote_dv
	if(function_exists('firstCashNote_dv')){
		$args=array();
		firstCashNote_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>
